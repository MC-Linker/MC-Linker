// noinspection JSUnresolvedVariable
import { addPh, ph } from '../../utilities/messages.js';
import keys from '../../utilities/keys.js';
import * as utils from '../../utilities/utils.js';
import { codeBlockFromCommandResponse, MaxAutoCompleteChoices, MinecraftDataVersion } from '../../utilities/utils.js';
import MinecraftData from 'minecraft-data';
import AutocompleteCommand from '../../structures/AutocompleteCommand.js';
import commands from '../../resources/data/commands.json' with { type: 'json' };
import { FilePath } from '../../structures/Protocol.js';

const mcData = MinecraftData(MinecraftDataVersion);

export default class Command extends AutocompleteCommand {

    // noinspection LocalVariableNamingConventionJS
    memoizedGetAutocompleteSuggestions = utils.memoize(this.getAutocompleteSuggestions, 4);

    constructor() {
        super({
            name: 'command',
            category: 'moderation',
        });
    }

    async getAutocompleteSuggestions(focusedOption, allOptions, user, guildId, client) {
        const respondArray = [];

        if(focusedOption.name === 'command') {
            return Object.keys(commands)
                .filter(cmd => cmd.includes(focusedOption.value))
                .map(cmd => ({ name: cmd, value: cmd }));
        }

        // Get the command name from the first option
        const commandName = allOptions[0].value.toLowerCase();
        allOptions.shift();

        // if the command doesn't exist, return an empty array
        if(!Object.keys(commands).includes(commandName)) return [];

        // Find index of focused option and get suggestions for that option
        const focusedIndex = allOptions.findIndex(opt => opt.name === focusedOption.name);
        const allSuggestions = commands[commandName];
        const suggestions = allSuggestions[focusedIndex]; // get the suggestions for the focused option
        // if there are no suggestions for that index on the command, return an empty array
        if(!allSuggestions || !suggestions) return [];

        const previousArgument = allOptions[focusedIndex - 1]?.value; // get the value of the previous argument, if it exists
        await addPlaceholdersFromSuggestions(suggestions);

        return respondArray;

        async function addPlaceholdersFromSuggestions(suggestions) {
            const filteredKey = findSuggestionKey(suggestions, previousArgument, allOptions);
            const filteredSuggestions = suggestions?.[filteredKey]; // get the filtered suggestions
            if(!filteredSuggestions) return [];

            for(const suggestion of filteredSuggestions) {
                await addAndPushPlaceholder(suggestion);
            }
        }

        async function addAndPushPlaceholder(suggestion) {
            // if no placeholder in suggestion, add it directly to the response array
            if(!suggestion.match(/%.+%/g)) return pushPlaceholder(suggestion, suggestion);

            //Replace arg[0-9] with corresponding value for placeholders
            //arg2 => value of 2nd option
            suggestion = suggestion.replace(/%arg(-?\d)_.+%/g, (match, index) => {
                index = parseInt(index);
                if(index < 0) index = allOptions.length + index - 1; //Allow relative (negative) indexes
                return allOptions[index]?.value ? match.replace(/arg-?\d/, allOptions[index]?.value) : match;
            });

            if(suggestion.includes('_argument_')) {
                const [command, index] = suggestion.split(/%(.+)_argument_(\d)%/).filter(n => n); // get the command and argument index from the placeholder
                const commandSuggestions = commands[command]?.[parseInt(index)]; // get the suggestions for the command and index
                await addPlaceholdersFromSuggestions(commandSuggestions);
                return;
            }

            const placeholder = await getPlaceholder(suggestion.replaceAll('%', ''), {
                client,
                user,
                server: client.serverConnections.cache.get(guildId),
                focused: focusedOption.value,
            });
            if(!placeholder) {
                logger.info(addPh(keys.commands.command.warnings.could_not_find_placeholders.console, { placeholder: suggestion }));
                return;
            }

            // push the placeholder entries to the respond array
            if(Array.isArray(placeholder)) {
                for(const ph of placeholder) pushPlaceholder(ph, ph);
            }
            else if(typeof placeholder === 'object') {
                for(const [name, value] of Object.entries(placeholder)) pushPlaceholder(name, value);
            }
        }

        function pushPlaceholder(name, value) {
            // if the placeholder value or name includes the focused option, push it to the response array
            if([name, value].some(e => e.toLowerCase().includes(focusedOption.value.toLowerCase()))) {
                respondArray.push({ name, value });
            }
        }

        //Suggestion key:
        //"arg2=string" => 2nd option === string
        //"string" => previous option === string
        //"arg-1!=string" => previous option !== string
        //"arg2=string & arg1=string2" => 2nd option === string && 1st option === string2
        //"" => any previous option
        function findSuggestionKey(suggestions, previousArgument, allOptions) {
            if(typeof suggestions !== 'object') return '';
            return Object.keys(suggestions).find(suggestion => {
                suggestion = suggestion.replaceAll(' ', ''); //Remove all whitespaces

                let returnBool = true;
                suggestion.split('&').forEach(condition => {
                    if(!returnBool) return;
                    let [index, string] = condition.split('=', 2);

                    index = parseInt(index.replace('arg', ''));
                    if(index < 0) index = allOptions?.length + index - 1; //Allow relative (negative) indexes

                    returnBool = condition === previousArgument || (!isNaN(index) ? string === allOptions?.[index]?.value : false);
                });

                return returnBool;
            }) ?? ''; // return empty string if no suggestion key was found (default option)
        }
    }

    async autocomplete(interaction, client) {
        const focused = interaction.options.getFocused(true);

        const mutableOptions = [...interaction.options.data];
        const respondArray = await this.memoizedGetAutocompleteSuggestions(focused, mutableOptions, interaction.user, interaction.guildId, client);
        if(respondArray.length > MaxAutoCompleteChoices) respondArray.length = 25;
        interaction.respond(respondArray).catch(err => interaction.replyTl(keys.main.errors.could_not_autocomplete_command, ph.error(err)));
    }

    async execute(interaction, client, args, server) {
        if(!await super.execute(interaction, client, args, server)) return;

        const command = args[0];
        args.shift(); //Shift commandName

        for(let arg of args) {
            let user;
            if(arg === '@s') user = interaction.member.user;
            else user = (await utils.getUsersFromMention(client, arg))?.[0];
            if(!user) continue;

            const username = client.userConnections.cache.get(user.id)?.username;
            if(!username) return;

            arg = arg.replace(arg, username);
        }

        const userConnection = client.userConnections.cache.get(interaction.user.id);
        const resp = await server.protocol.execute(`${command} ${args.join(' ')}`, userConnection?.getUUID(server));
        if(!await utils.handleProtocolResponse(resp, server.protocol, interaction)) return;

        let respMessage = resp.status === 200 && resp.data?.message ? resp.data.message : keys.api.plugin.warnings.no_response_message;
        respMessage = codeBlockFromCommandResponse(respMessage);
        return interaction.replyTl(keys.commands.command.success, { 'response': respMessage });
    }
}

/**
 * Gets the placeholder for the given command key.
 * @param {string} key - The command key.
 * @param {object} args - Additional arguments passed to this function.
 * @param {MCLinker} args.client - The MCLinker client.
 * @param {User} args.user - The Discord user who sent the command.
 * @param {?ServerConnection} args.server - The server connection.
 * @param {string} args.focused - The focused command autocomplete value.
 * @returns {Promise<object|array>}
 */
async function getPlaceholder(key, args) {
    const colors = [
        'black',
        'dark_blue',
        'dark_green',
        'dark_aqua',
        'dark_red',
        'dark_purple',
        'gold',
        'gray',
        'dark_gray',
        'blue',
        'green',
        'aqua',
        'red',
        'light_purple',
        'yellow',
        'white',
    ];

    const userConn = args.client.userConnections.cache.get(args.user.id);
    const server = args.server;

    let placeholder = {};
    switch(key) {
        case 'advancements':
            const advancements = utils.searchAllAdvancements(args.focused ?? '');
            //Combine to one object and map to name and category.value
            advancements.forEach(advancement =>
                placeholder[advancement.name] = `minecraft:${advancement.category}/${advancement.value}`,
            );
            break;
        case 'target_selectors':
            placeholder = {
                '@a': '@a',
                '@p': '@p',
                '@r': '@r',
                '@e': '@e',
                '@n': '@n',
            };

            const username = userConn?.username;
            if(username) {
                placeholder['@s'] = username;
                placeholder[username] = username;
            }

            const resp = await server?.protocol?.getOnlinePlayers?.();
            const onlinePlayers = resp?.status === 200 ? resp.data : [];
            onlinePlayers.forEach(player => placeholder[player] = player);
            break;
        case 'attributes':
            mcData.attributesArray.forEach(attribute =>
                placeholder[attribute.name] = attribute.resource,
            );
            break;
        case 'gamerules':
            placeholder = [
                'announceAdvancements',
                'commandBlockOutput',
                'disableElytraMovementCheck',
                'disableRaids',
                'doDaylightCycle',
                'doEntityDrops',
                'doFireTick',
                'doInsomnia',
                'doImmediateRespawn',
                'doLimitedCrafting',
                'doMobLoot',
                'doMobSpawning',
                'doPatrolSpawning',
                'doTileDrops',
                'doTraderSpawning',
                'doWardenSpawning',
                'doWeatherCycle',
                'drowningDamage',
                'fallDamage',
                'fireDamage',
                'forgiveDeadPlayers',
                'freezeDamage',
                'keepInventory',
                'logAdminCommands',
                'maxCommandChainLength',
                'maxEntityCramming',
                'mobGriefing',
                'naturalRegeneration',
                'playersSleepingPercentage',
                'randomTickSpeed',
                'reducedDebugInfo',
                'sendCommandFeedback',
                'showDeathMessages',
                'spawnRadius',
                'spectatorsGenerateChunks',
                'universalAnger',
            ];
            break;
        case 'disabled_datapacks':
        case 'enabled_datapacks':
            if(!server) return {};
            const level = await getNBTFile(...FilePath.LevelDat(server.path, server.id));

            const datapacks = level?.Data?.DataPacks;
            if(key === 'enabled_datapacks') placeholder = datapacks?.Enabled;
            else if(key === 'disabled_datapacks') placeholder = datapacks?.Disabled;

            break;
        case 'functions':
            placeholder = await getFunctions();
            break;
        case 'player_coordinates':
        case 'player_coordinates_xz':
            const uuid = userConn?.uuid;
            if(!uuid || !server) return {};
            const playerData = await getNBTFile(FilePath.PlayerData(server.path, uuid), `./download-cache/playernbt/${uuid}.dat`);

            if(!playerData?.Pos) return {};
            const [x, y, z] = playerData?.Pos;

            if(key === 'player_coordinates') placeholder = { '~ ~ ~': `${x} ${y} ${z}` };
            else if(key === 'player_coordinates_xz') placeholder = { '~ ~': `${x} ${z}` };
            break;
        case 'items':
            mcData.itemsArray.forEach(item =>
                placeholder[item.displayName] = item.name,
            );
            break;
        case 'blocks':
            mcData.blocksArray.forEach(block =>
                placeholder[block.displayName] = block.name,
            );
            break;
        case 'block_tags':
            placeholder = [
                'mineable/axe',
                'mineable/hoe',
                'mineable/pickaxe',
                'mineable/shovel',
                'acacia_logs',
                'ancient_city_replaceables',
                'animals_spawnable_on',
                'anvil',
                'axolotls_spawnable_on',
                'azalea_grows_on',
                'azalea_root_replaceable',
                'bamboo_plantable_on',
                'banners',
                'base_stone_nether',
                'base_stone_overworld',
                'beacon_base_blocks',
                'beds',
                'beehives',
                'bee_growables',
                'big_dripleaf_placeable',
                'birch_logs',
                'components',
                'campfires',
                'candle_cakes',
                'candles',
                'cauldrons',
                'cave_vines',
                'climbable',
                'coal_ores',
                'completes_find_tree_tutorial',
                'convertable_to_mud',
                'copper_ores',
                'corals',
                'coral_blocks',
                'coral_plants',
                'crimson_stems',
                'crops',
                'crystal_sound_blocks',
                'dampens_vibrations',
                'dark_oak_logs',
                'dead_bush_may_place_on',
                'deepslate_ore_replaceables',
                'diamond_ores',
                'dirt',
                'doors',
                'dragon_immune',
                'dragon_transparent',
                'dripstone_replaceable_blocks',
                'emerald_ores',
                'enderman_holdable',
                'fall_damage_resetting',
                'features_cannot_replace',
                'fence_gates',
                'fences',
                'fire',
                'flower_pots',
                'flowers',
                'foxes_spawnable_on',
                'frog_prefer_jump_to',
                'frogs_spawnable_on',
                'geode_invalid_blocks',
                'goats_spawnable_on',
                'gold_ores',
                'guarded_by_piglins',
                'hoglin_repellents',
                'ice',
                'impermeable',
                'infiniburn_end',
                'infiniburn_nether',
                'infiniburn_overworld',
                'inside_step_sound_blocks',
                'iron_ores',
                'jungle_logs',
                'lapis_ores',
                'lava_pool_stone_cannot_replace\nlava_pool_cannot_replace',
                'leaves',
                'logs',
                'logs_that_burn',
                'lush_ground_replaceable',
                'mangrove_logs',
                'mangrove_logs_can_grow_through',
                'mangrove_roots_can_grow_through',
                'mooshrooms_spawnable_on',
                'moss_replaceable',
                'mushroom_grow_block',
                'needs_diamond_tool',
                'needs_iron_tool',
                'needs_stone_tool',
                'nether_carver_replaceables',
                'non_flammable_wood',
                'nylium',
                'oak_logs',
                'overworld_carver_replaceables',
                'overworld_natural_logs',
                'parrots_spawnable_on',
                'piglin_repellents',
                'planks',
                'polar_bears_spawnable_on_alternate',
                'portals',
                'pressure_plates',
                'prevent_mob_spawning_inside',
                'rabbits_spawnable_on',
                'rails',
                'redstone_ores',
                'replaceable_plants',
                'sand',
                'saplings',
                'sculk_replaceable',
                'sculk_replaceable_worldgen',
                'shulker_boxes',
                'signs',
                'skip_occlude_vibration_when_above',
                'slabs',
                'small_dripleaf_placeable',
                'small_flowers',
                'snaps_goat_horn',
                'snow_layer_can_survive_on',
                'snow_layer_cannot_survive_on',
                'snow',
                'soul_fire_base_blocks',
                'soul_speed_blocks',
                'spruce_logs',
                'stairs',
                'standing_signs',
                'stone_bricks',
                'stone_ore_replaceables',
                'stone_pressure_plates',
                'strider_warm_blocks',
                'tall_flowers',
                'terracotta',
                'trapdoors',
                'underwater_bonemeals',
                'unstable_bottom_center',
                'valid_spawn',
                'walls',
                'wall_corals',
                'wall_post_override',
                'wall_signs',
                'warped_stems',
                'wart_blocks',
                'wither_immune',
                'wither_summon_base_blocks',
                'wolves_spawnable_on',
                'wooden_buttons',
                'wooden_doors',
                'wooden_fences',
                'wooden_pressure_plates',
                'wooden_slabs',
                'wooden_stairs',
                'wooden_trapdoors',
                'wool_carpets',
                'wool',
            ].map(tag => `#${tag}`);
            break;
        case 'structure_tags':
            placeholder = [
                'cats_spawn_as_black',
                'cats_spawn_in',
                'dolphin_located',
                'eye_of_ender_located',
                'mineshaft',
                'ocean_ruin',
                'on_ocean_explorer_maps',
                'on_treasure_maps',
                'on_woodland_explorer_maps',
                'ruined_portal',
                'shipwreck',
                'village',
            ].map(tag => `#${tag}`);
            break;
        case 'item_tags':
            placeholder = [
                'acacia_logs',
                'anvil',
                'arrows',
                'axolotl_tempt_items',
                'banners',
                'beacon_payment_items',
                'beds',
                'birch_logs',
                'boats',
                'components',
                'candles',
                'chest_boats',
                'cluster_max_harvestables',
                'coal_ores',
                'coals',
                'compasses',
                'completes_find_tree_tutorial',
                'copper_ores',
                'creeper_drop_music_discs',
                'crimson_stems',
                'dampens_vibrations',
                'dark_oak_logs',
                'diamond_ores',
                'dirt',
                'doors',
                'emerald_ores',
                'fences',
                'fishes',
                'flowers',
                'fox_food',
                'freeze_immune_wearables',
                'gold_ores',
                'ignored_by_piglin_babies',
                'iron_ores',
                'jungle_logs',
                'lapis_ores',
                'leaves',
                'lectern_books',
                'logs',
                'logs_that_burn',
                'mangrove_logs',
                'music_discs',
                'non_flammable_wood',
                'oak_logs',
                'overworld_natural_logs',
                'piglin_food',
                'piglin_loved',
                'piglin_repellents',
                'planks',
                'rails',
                'redstone_ores',
                'sand',
                'saplings',
                'signs',
                'slabs',
                'small_flowers',
                'soul_fire_base_blocks',
                'spruce_logs',
                'stairs',
                'stone_bricks',
                'stone_crafting_materials',
                'stone_tool_materials',
                'tall_flowers',
                'terracotta',
                'trapdoors',
                'walls',
                'warped_stems',
                'wart_blocks',
                'wooden_buttons',
                'wooden_doors',
                'wooden_fences',
                'wooden_pressure_plates',
                'wooden_slabs',
                'wooden_stairs',
                'wooden_trapdoors',
                'wool_carpets',
                'wool',
            ].map(tag => `#${tag}`);
            break;
        case 'biome_tags':
            placeholder = [
                'allows_surface_slime_spawns',
                'allows_tropical_fish_spawns_at_any_height',
                'has_closer_water_fog',
                'has_structure/ancient_city',
                'has_structure/bastion_remnant',
                'has_structure/buried_treasure',
                'has_structure/desert_pyramid',
                'has_structure/end_city',
                'has_structure/igloo',
                'has_structure/jungle_temple',
                'has_structure/mineshaft_mesa',
                'has_structure/mineshaft',
                'has_structure/nether_fortress',
                'has_structure/nether_fossil',
                'has_structure/ocean_monument',
                'has_structure/ocean_ruin_cold',
                'has_structure/ocean_ruin_warm',
                'has_structure/pillager_outpost',
                'has_structure/ruined_portal_desert',
                'has_structure/ruined_portal_jungle',
                'has_structure/ruined_portal_mountain',
                'has_structure/ruined_portal_nether',
                'has_structure/ruined_portal_ocean',
                'has_structure/ruined_portal_standard',
                'has_structure/ruined_portal_swamp',
                'has_structure/shipwreck_beached',
                'has_structure/shipwreck',
                'has_structure/stronghold',
                'has_structure/swamp_hut',
                'has_structure/village_desert',
                'has_structure/village_plains',
                'has_structure/village_savanna',
                'has_structure/village_snowy',
                'has_structure/village_taiga',
                'has_structure/woodland_mansion',
                'is_badlands',
                'is_beach',
                'is_deep_ocean',
                'is_end',
                'is_forest',
                'is_hill',
                'is_jungle',
                'is_mountain',
                'is_nether',
                'is_ocean',
                'is_overworld',
                'is_river',
                'is_savanna',
                'is_taiga',
                'mineshaft_blocking',
                'more_frequent_drowned_spawns',
                'only_allows_snow_and_gold_rabbits',
                'plays_underwater_music',
                'polar_bears_spawn_on_alternate_blocks',
                'produces_corals_from_bonemeal',
                'reduce_water_ambient_spawns',
                'required_ocean_monument_surrounding',
                'spawns_cold_variant_frogs',
                'spawns_warm_variant_frogs',
                'stronghold_biased_to',
                'water_on_map_outlines',
                'without_patrol_spawns',
                'without_wandering_trader_spawns',
                'without_zombie_sieges',
            ].map(tag => `#${tag}`);
            break;
        case 'structures':
            [
                'bastion_remnant',
                'buried_treasure',
                'endcity',
                'fortress',
                'mansion',
                'mineshaft',
                'monument',
                'nether_fossil',
                'ocean_ruin',
                'pillager_outpost',
                'ruined_portal',
                'shipwreck',
                'stronghold',
                'desert_pyramid',
                'igloo',
                'jungle_pyramid',
                'swamp_hut',
                'village',
            ].forEach(structure => {
                let formattedStructure = structure.replaceAll('_', ' ').toTitleCase(true);
                if(structure === 'mansion') formattedStructure = 'Woodland Mansion';
                else if(structure === 'monument') formattedStructure = 'Ocean Monument';
                else if(structure === 'ocean_ruin') formattedStructure = 'Ocean Ruins';

                placeholder[formattedStructure] = structure;
            });
            break;
        case 'effects':
            mcData.effectsArray.forEach(effect =>
                placeholder[effect.displayName] = toSnakeCase(effect.name),
            );
            break;
        case 'enchantments':
            mcData.enchantmentsArray.forEach(enchantment =>
                placeholder[enchantment.displayName] = enchantment.name,
            );
            break;
        case 'scoreboards':
            if(!server) return {};
            const scoreboards = await getNBTFile(...FilePath.Scoreboards(server.path, server.id));

            placeholder = scoreboards?.data?.Objectives?.map(scoreboard => scoreboard.Name) ?? {};
            break;
        case 'bossbars':
            if(!server) return {};
            const bossbars = await getNBTFile(...FilePath.LevelDat(server.path, server.id));
            if(!bossbars) return {};

            try {
                placeholder = Object.keys(bossbars?.Data?.CustomBossEvents);
            }
            catch(err) {
                return {};
            }
            break;
        case 'commands':
            placeholder = Object.keys(commands);
            break;
        case 'slots':
            placeholder = [
                'armor.chest',
                'armor.feet',
                'armor.head',
                'armor.legs',
                'weapon',
                'weapon.mainhand',
                'weapon.offhand',
                'horse.saddle',
                'horse.chest',
                'horse.armor',
            ];

            //Push extra slots
            for(let i = 0; i < 54; i++) {
                if(i >= 0 && i <= 7) placeholder.push(`villager.${i}`);
                if(i >= 0 && i <= 8) placeholder.push(`hotbar.${i}`);
                if(i >= 0 && i <= 14) placeholder.push(`horse.${i}`);
                if(i >= 0 && i <= 26) placeholder.push(`inventory.${i}`);
                if(i >= 0 && i <= 26) placeholder.push(`enderchest.${i}`);
                if(i >= 0 && i <= 53) placeholder.push(`container.${i}`);
            }
            break;
        case 'loot':
            //Block Loot
            Object.values(mcData.blockLoot).forEach(loot => {
                placeholder[mcData.blocksByName[loot.block].displayName] = `blocks/${loot.block}`;
            });

            //Entity Loot
            Object.values(mcData.entityLoot).forEach(loot => {
                placeholder[mcData.entitiesByName[loot.entity].displayName] = `entities/${loot.entity}`;
            });

            //Chest Loot
            [
                'abandoned_mineshaft',
                'bastion_bridge',
                'bastion_hoglin_stable',
                'bastion_other',
                'bastion_treasure',
                'buried_treasure',
                'desert_pyramid',
                'end_city_treasure',
                'igloo_chest',
                'jungle_temple',
                'jungle_temple_dispenser',
                'nether_bridge',
                'pillager_outpost',
                'ruined_portal',
                'shipwreck_map',
                'shipwreck_supply',
                'shipwreck_treasure',
                'simple_dungeon',
                'spawn_bonus_chest',
                'stronghold_corridor',
                'stronghold_crossing',
                'stronghold_library',
                'underwater_ruin_big',
                'underwater_ruin_small',
                'woodland_mansion',
                'village/village_armorer',
                'village/village_butcher',
                'village/village_cartographer',
                'village/village_mason',
                'village/village_shepherd',
                'village/village_tannery',
                'village/village_weaponsmith',
                'village/village_desert_house',
                'village/village_plains_house',
                'village/village_savanna_house',
                'village/village_snowy_house',
                'village/village_taiga_house',
                'village/village_fisher',
                'village/village_fletcher',
                'village/village_temple',
                'village/village_toolsmith',
            ].forEach(loot => {
                const formattedLoot = loot.split('/').pop().split('_').map(word => word.toTitleCase()).join(' ');
                placeholder[formattedLoot] = `chests/${loot}`;
            });

            //Gameplay Loot
            [
                'cat_morning_gift',
                'fishing/fish',
                'fishing/junk',
                'fishing/treasure',
                'fishing',
                'hero_of_the_village/armorer_gift',
                'hero_of_the_village/butcher_gift',
                'hero_of_the_village/cartographer_gift',
                'hero_of_the_village/cleric_gift',
                'hero_of_the_village/farmer_gift',
                'hero_of_the_village/fisherman_gift',
                'hero_of_the_village/fletcher_gift',
                'hero_of_the_village/leatherworker_gift',
                'hero_of_the_village/librarian_gift',
                'hero_of_the_village/mason_gift',
                'hero_of_the_village/shepherd_gift',
                'hero_of_the_village/toolsmith_gift',
                'hero_of_the_village/weaponsmith_gift',
                'piglin_bartering',
            ].forEach(loot => {
                const formattedLoot = loot.split('/').pop().split('_').map(word => word.toTitleCase()).join(' ');
                placeholder[formattedLoot] = `gameplay/${loot}`;
            });
            break;
        case 'sounds':
            placeholder = [
                'ambient.basalt_deltas.additions',
                'ambient.basalt_deltas.loop',
                'ambient.basalt_deltas.mood',
                'ambient.cave',
                'ambient.crimson_forest.additions',
                'ambient.crimson_forest.loop',
                'ambient.crimson_forest.mood',
                'ambient.nether_wastes.additions',
                'ambient.nether_wastes.loop',
                'ambient.nether_wastes.mood',
                'ambient.soul_sand_valley.additions',
                'ambient.soul_sand_valley.loop',
                'ambient.soul_sand_valley.mood',
                'ambient.underwater.enter',
                'ambient.underwater.exit',
                'ambient.underwater.loop',
                'ambient.underwater.loop.additions',
                'ambient.underwater.loop.additions.rare',
                'ambient.underwater.loop.additions.ultra_rare',
                'ambient.warped_forest.additions',
                'ambient.warped_forest.loop',
                'ambient.warped_forest.mood',
                'block.amethyst_block.break',
                'block.amethyst_block.chime',
                'block.amethyst_block.fall',
                'block.amethyst_block.hit',
                'block.amethyst_block.place',
                'block.amethyst_block.step',
                'block.amethyst_cluster.break',
                'block.amethyst_cluster.fall',
                'block.amethyst_cluster.hit',
                'block.amethyst_cluster.place',
                'block.amethyst_cluster.step',
                'block.ancient_debris.break',
                'block.ancient_debris.fall',
                'block.ancient_debris.hit',
                'block.ancient_debris.place',
                'block.ancient_debris.step',
                'block.anvil.break',
                'block.anvil.destroy',
                'block.anvil.fall',
                'block.anvil.hit',
                'block.anvil.land',
                'block.anvil.place',
                'block.anvil.step',
                'block.anvil.use',
                'block.azalea.break',
                'block.azalea.fall',
                'block.azalea.hit',
                'block.azalea.place',
                'block.azalea.step',
                'block.azalea_leaves.break',
                'block.azalea_leaves.fall',
                'block.azalea_leaves.hit',
                'block.azalea_leaves.place',
                'block.azalea_leaves.step',
                'block.bamboo.break',
                'block.bamboo.fall',
                'block.bamboo.hit',
                'block.bamboo.place',
                'block.bamboo.step',
                'block.bamboo_sapling.break',
                'block.bamboo_sapling.hit',
                'block.bamboo_sapling.place',
                'block.barrel.close',
                'block.barrel.open',
                'block.basalt.break',
                'block.basalt.fall',
                'block.basalt.hit',
                'block.basalt.place',
                'block.basalt.step',
                'block.beacon.activate',
                'block.beacon.ambient',
                'block.beacon.deactivate',
                'block.beacon.power_select',
                'block.beehive.drip',
                'block.beehive.enter',
                'block.beehive.exit',
                'block.beehive.shear',
                'block.beehive.work',
                'block.bell.resonate',
                'block.bell.use',
                'block.big_dripleaf.break',
                'block.big_dripleaf.fall',
                'block.big_dripleaf.hit',
                'block.big_dripleaf.place',
                'block.big_dripleaf.step',
                'block.big_dripleaf.tilt_down',
                'block.big_dripleaf.tilt_up',
                'block.blastfurnace.fire_crackle',
                'block.bone_block.break',
                'block.bone_block.fall',
                'block.bone_block.hit',
                'block.bone_block.place',
                'block.bone_block.step',
                'block.brewing_stand.brew',
                'block.bubble_column.bubble_pop',
                'block.bubble_column.upwards_ambient',
                'block.bubble_column.upwards_inside',
                'block.bubble_column.whirlpool_ambient',
                'block.bubble_column.whirlpool_inside',
                'block.cake.add_candle',
                'block.calcite.break',
                'block.calcite.fall',
                'block.calcite.hit',
                'block.calcite.place',
                'block.calcite.step',
                'block.campfire.crackle',
                'block.candle.ambient',
                'block.candle.break',
                'block.candle.extinguish',
                'block.candle.fall',
                'block.candle.hit',
                'block.candle.place',
                'block.candle.step',
                'block.cave_vines.break',
                'block.cave_vines.fall',
                'block.cave_vines.hit',
                'block.cave_vines.pick_berries',
                'block.cave_vines.place',
                'block.cave_vines.step',
                'block.chain.break',
                'block.chain.fall',
                'block.chain.hit',
                'block.chain.place',
                'block.chain.step',
                'block.chest.close',
                'block.chest.locked',
                'block.chest.open',
                'block.chorus_flower.death',
                'block.chorus_flower.grow',
                'block.comparator.click',
                'block.composter.empty',
                'block.composter.fill',
                'block.composter.fill_success',
                'block.composter.ready',
                'block.conduit.activate',
                'block.conduit.ambient',
                'block.conduit.ambient.short',
                'block.conduit.attack.target',
                'block.conduit.deactivate',
                'block.copper.break',
                'block.copper.fall',
                'block.copper.hit',
                'block.copper.place',
                'block.copper.step',
                'block.coral_block.break',
                'block.coral_block.fall',
                'block.coral_block.hit',
                'block.coral_block.place',
                'block.coral_block.step',
                'block.crop.break',
                'block.deepslate.break',
                'block.deepslate.fall',
                'block.deepslate.hit',
                'block.deepslate.place',
                'block.deepslate.step',
                'block.deepslate_bricks.break',
                'block.deepslate_bricks.fall',
                'block.deepslate_bricks.hit',
                'block.deepslate_bricks.place',
                'block.deepslate_bricks.step',
                'block.deepslate_tiles.break',
                'block.deepslate_tiles.fall',
                'block.deepslate_tiles.hit',
                'block.deepslate_tiles.place',
                'block.deepslate_tiles.step',
                'block.dispenser.dispense',
                'block.dispenser.fail',
                'block.dispenser.launch',
                'block.dripstone_block.break',
                'block.dripstone_block.fall',
                'block.dripstone_block.hit',
                'block.dripstone_block.place',
                'block.dripstone_block.step',
                'block.enchantment_table.use',
                'block.end_gateway.spawn',
                'block.end_portal.spawn',
                'block.end_portal_frame.fill',
                'block.ender_chest.close',
                'block.ender_chest.open',
                'block.fence_gate.close',
                'block.fence_gate.open',
                'block.fire.ambient',
                'block.fire.extinguish',
                'block.flowering_azalea.break',
                'block.flowering_azalea.fall',
                'block.flowering_azalea.hit',
                'block.flowering_azalea.place',
                'block.flowering_azalea.step',
                'block.fungus.break',
                'block.fungus.fall',
                'block.fungus.hit',
                'block.fungus.place',
                'block.fungus.step',
                'block.furnace.fire_crackle',
                'block.gilded_blackstone.break',
                'block.gilded_blackstone.fall',
                'block.gilded_blackstone.hit',
                'block.gilded_blackstone.place',
                'block.gilded_blackstone.step',
                'block.glass.break',
                'block.glass.fall',
                'block.glass.hit',
                'block.glass.place',
                'block.glass.step',
                'block.grass.break',
                'block.grass.fall',
                'block.grass.hit',
                'block.grass.place',
                'block.grass.step',
                'block.gravel.break',
                'block.gravel.fall',
                'block.gravel.hit',
                'block.gravel.place',
                'block.gravel.step',
                'block.grindstone.use',
                'block.growing_plant.crop',
                'block.hanging_roots.break',
                'block.hanging_roots.fall',
                'block.hanging_roots.hit',
                'block.hanging_roots.place',
                'block.hanging_roots.step',
                'block.honey_block.break',
                'block.honey_block.fall',
                'block.honey_block.hit',
                'block.honey_block.place',
                'block.honey_block.slide',
                'block.honey_block.step',
                'block.iron_door.close',
                'block.iron_door.open',
                'block.iron_trapdoor.close',
                'block.iron_trapdoor.open',
                'block.ladder.break',
                'block.ladder.fall',
                'block.ladder.hit',
                'block.ladder.place',
                'block.ladder.step',
                'block.lantern.break',
                'block.lantern.fall',
                'block.lantern.hit',
                'block.lantern.place',
                'block.lantern.step',
                'block.large_amethyst_bud.break',
                'block.large_amethyst_bud.place',
                'block.lava.ambient',
                'block.lava.extinguish',
                'block.lava.pop',
                'block.lever.click',
                'block.lily_pad.place',
                'block.lodestone.break',
                'block.lodestone.fall',
                'block.lodestone.hit',
                'block.lodestone.place',
                'block.lodestone.step',
                'block.medium_amethyst_bud.break',
                'block.medium_amethyst_bud.place',
                'block.metal.break',
                'block.metal.fall',
                'block.metal.hit',
                'block.metal.place',
                'block.metal.step',
                'block.metal_pressure_plate.click_off',
                'block.metal_pressure_plate.click_on',
                'block.moss.break',
                'block.moss.fall',
                'block.moss.hit',
                'block.moss.place',
                'block.moss.step',
                'block.moss_carpet.break',
                'block.moss_carpet.fall',
                'block.moss_carpet.hit',
                'block.moss_carpet.place',
                'block.moss_carpet.step',
                'block.nether_bricks.break',
                'block.nether_bricks.fall',
                'block.nether_bricks.hit',
                'block.nether_bricks.place',
                'block.nether_bricks.step',
                'block.nether_gold_ore.break',
                'block.nether_gold_ore.fall',
                'block.nether_gold_ore.hit',
                'block.nether_gold_ore.place',
                'block.nether_gold_ore.step',
                'block.nether_ore.break',
                'block.nether_ore.fall',
                'block.nether_ore.hit',
                'block.nether_ore.place',
                'block.nether_ore.step',
                'block.nether_sprouts.break',
                'block.nether_sprouts.fall',
                'block.nether_sprouts.hit',
                'block.nether_sprouts.place',
                'block.nether_sprouts.step',
                'block.nether_wart.break',
                'block.netherite_block.break',
                'block.netherite_block.fall',
                'block.netherite_block.hit',
                'block.netherite_block.place',
                'block.netherite_block.step',
                'block.netherrack.break',
                'block.netherrack.fall',
                'block.netherrack.hit',
                'block.netherrack.place',
                'block.netherrack.step',
                'block.note_block.banjo',
                'block.note_block.basedrum',
                'block.note_block.bass',
                'block.note_block.bell',
                'block.note_block.bit',
                'block.note_block.chime',
                'block.note_block.cow_bell',
                'block.note_block.didgeridoo',
                'block.note_block.flute',
                'block.note_block.guitar',
                'block.note_block.harp',
                'block.note_block.hat',
                'block.note_block.iron_xylophone',
                'block.note_block.pling',
                'block.note_block.snare',
                'block.note_block.xylophone',
                'block.nylium.break',
                'block.nylium.fall',
                'block.nylium.hit',
                'block.nylium.place',
                'block.nylium.step',
                'block.piston.contract',
                'block.piston.extend',
                'block.pointed_dripstone.break',
                'block.pointed_dripstone.drip_lava',
                'block.pointed_dripstone.drip_lava_into_cauldron',
                'block.pointed_dripstone.drip_water',
                'block.pointed_dripstone.drip_water_into_cauldron',
                'block.pointed_dripstone.fall',
                'block.pointed_dripstone.hit',
                'block.pointed_dripstone.land',
                'block.pointed_dripstone.place',
                'block.pointed_dripstone.step',
                'block.polished_deepslate.break',
                'block.polished_deepslate.fall',
                'block.polished_deepslate.hit',
                'block.polished_deepslate.place',
                'block.polished_deepslate.step',
                'block.portal.ambient',
                'block.portal.travel',
                'block.portal.trigger',
                'block.powder_snow.break',
                'block.powder_snow.fall',
                'block.powder_snow.hit',
                'block.powder_snow.place',
                'block.powder_snow.step',
                'block.pumpkin.carve',
                'block.redstone_torch.burnout',
                'block.respawn_anchor.ambient',
                'block.respawn_anchor.charge',
                'block.respawn_anchor.deplete',
                'block.respawn_anchor.set_spawn',
                'block.rooted_dirt.break',
                'block.rooted_dirt.fall',
                'block.rooted_dirt.hit',
                'block.rooted_dirt.place',
                'block.rooted_dirt.step',
                'block.roots.break',
                'block.roots.fall',
                'block.roots.hit',
                'block.roots.place',
                'block.roots.step',
                'block.sand.break',
                'block.sand.fall',
                'block.sand.hit',
                'block.sand.place',
                'block.sand.step',
                'block.scaffolding.break',
                'block.scaffolding.fall',
                'block.scaffolding.hit',
                'block.scaffolding.place',
                'block.scaffolding.step',
                'block.sculk_sensor.break',
                'block.sculk_sensor.clicking',
                'block.sculk_sensor.clicking_stop',
                'block.sculk_sensor.fall',
                'block.sculk_sensor.hit',
                'block.sculk_sensor.place',
                'block.sculk_sensor.step',
                'block.shroomlight.break',
                'block.shroomlight.fall',
                'block.shroomlight.hit',
                'block.shroomlight.place',
                'block.shroomlight.step',
                'block.shulker_box.close',
                'block.shulker_box.open',
                'block.slime_block.break',
                'block.slime_block.fall',
                'block.slime_block.hit',
                'block.slime_block.place',
                'block.slime_block.step',
                'block.small_amethyst_bud.break',
                'block.small_amethyst_bud.place',
                'block.small_dripleaf.break',
                'block.small_dripleaf.fall',
                'block.small_dripleaf.hit',
                'block.small_dripleaf.place',
                'block.small_dripleaf.step',
                'block.smithing_table.use',
                'block.smoker.smoke',
                'block.snow.break',
                'block.snow.fall',
                'block.snow.hit',
                'block.snow.place',
                'block.snow.step',
                'block.soul_sand.break',
                'block.soul_sand.fall',
                'block.soul_sand.hit',
                'block.soul_sand.place',
                'block.soul_sand.step',
                'block.soul_soil.break',
                'block.soul_soil.fall',
                'block.soul_soil.hit',
                'block.soul_soil.place',
                'block.soul_soil.step',
                'block.spore_blossom.break',
                'block.spore_blossom.fall',
                'block.spore_blossom.hit',
                'block.spore_blossom.place',
                'block.spore_blossom.step',
                'block.stem.break',
                'block.stem.fall',
                'block.stem.hit',
                'block.stem.place',
                'block.stem.step',
                'block.stone.break',
                'block.stone.fall',
                'block.stone.hit',
                'block.stone.place',
                'block.stone.step',
                'block.stone_button.click_off',
                'block.stone_button.click_on',
                'block.stone_pressure_plate.click_off',
                'block.stone_pressure_plate.click_on',
                'block.sweet_berry_bush.break',
                'block.sweet_berry_bush.pick_berries',
                'block.sweet_berry_bush.place',
                'block.tripwire.attach',
                'block.tripwire.click_off',
                'block.tripwire.click_on',
                'block.tripwire.detach',
                'block.tuff.break',
                'block.tuff.fall',
                'block.tuff.hit',
                'block.tuff.place',
                'block.tuff.step',
                'block.vine.break',
                'block.vine.fall',
                'block.vine.hit',
                'block.vine.place',
                'block.vine.step',
                'block.wart_block.break',
                'block.wart_block.fall',
                'block.wart_block.hit',
                'block.wart_block.place',
                'block.wart_block.step',
                'block.water.ambient',
                'block.weeping_vines.break',
                'block.weeping_vines.fall',
                'block.weeping_vines.hit',
                'block.weeping_vines.place',
                'block.weeping_vines.step',
                'block.wet_grass.break',
                'block.wet_grass.fall',
                'block.wet_grass.hit',
                'block.wet_grass.place',
                'block.wet_grass.step',
                'block.wood.break',
                'block.wood.fall',
                'block.wood.hit',
                'block.wood.place',
                'block.wood.step',
                'block.wooden_button.click_off',
                'block.wooden_button.click_on',
                'block.wooden_door.close',
                'block.wooden_door.open',
                'block.wooden_pressure_plate.click_off',
                'block.wooden_pressure_plate.click_on',
                'block.wooden_trapdoor.close',
                'block.wooden_trapdoor.open',
                'block.wool.break',
                'block.wool.fall',
                'block.wool.hit',
                'block.wool.place',
                'block.wool.step',
                'enchant.thorns.hit',
                'entity.armor_stand.break',
                'entity.armor_stand.fall',
                'entity.armor_stand.hit',
                'entity.armor_stand.place',
                'entity.arrow.hit',
                'entity.arrow.hit_player',
                'entity.arrow.shoot',
                'entity.axolotl.attack',
                'entity.axolotl.death',
                'entity.axolotl.hurt',
                'entity.axolotl.idle_air',
                'entity.axolotl.idle_water',
                'entity.axolotl.splash',
                'entity.axolotl.swim',
                'entity.bat.ambient',
                'entity.bat.death',
                'entity.bat.hurt',
                'entity.bat.loop',
                'entity.bat.takeoff',
                'entity.bee.death',
                'entity.bee.hurt',
                'entity.bee.loop',
                'entity.bee.loop_aggressive',
                'entity.bee.pollinate',
                'entity.bee.sting',
                'entity.blaze.ambient',
                'entity.blaze.burn',
                'entity.blaze.death',
                'entity.blaze.hurt',
                'entity.blaze.shoot',
                'entity.boat.paddle_land',
                'entity.boat.paddle_water',
                'entity.cat.ambient',
                'entity.cat.beg_for_food',
                'entity.cat.death',
                'entity.cat.eat',
                'entity.cat.hiss',
                'entity.cat.hurt',
                'entity.cat.purr',
                'entity.cat.purreow',
                'entity.cat.stray_ambient',
                'entity.chicken.ambient',
                'entity.chicken.death',
                'entity.chicken.egg',
                'entity.chicken.hurt',
                'entity.chicken.step',
                'entity.cod.ambient',
                'entity.cod.death',
                'entity.cod.flop',
                'entity.cod.hurt',
                'entity.cow.ambient',
                'entity.cow.death',
                'entity.cow.hurt',
                'entity.cow.milk',
                'entity.cow.step',
                'entity.creeper.death',
                'entity.creeper.hurt',
                'entity.creeper.primed',
                'entity.dolphin.ambient',
                'entity.dolphin.ambient_water',
                'entity.dolphin.attack',
                'entity.dolphin.death',
                'entity.dolphin.eat',
                'entity.dolphin.hurt',
                'entity.dolphin.jump',
                'entity.dolphin.play',
                'entity.dolphin.splash',
                'entity.dolphin.swim',
                'entity.donkey.ambient',
                'entity.donkey.angry',
                'entity.donkey.chest',
                'entity.donkey.death',
                'entity.donkey.eat',
                'entity.donkey.hurt',
                'entity.dragon_fireball.explode',
                'entity.drowned.ambient',
                'entity.drowned.ambient_water',
                'entity.drowned.death',
                'entity.drowned.death_water',
                'entity.drowned.hurt',
                'entity.drowned.hurt_water',
                'entity.drowned.shoot',
                'entity.drowned.step',
                'entity.drowned.swim',
                'entity.egg.throw',
                'entity.elder_guardian.ambient',
                'entity.elder_guardian.ambient_land',
                'entity.elder_guardian.curse',
                'entity.elder_guardian.death',
                'entity.elder_guardian.death_land',
                'entity.elder_guardian.flop',
                'entity.elder_guardian.hurt',
                'entity.elder_guardian.hurt_land',
                'entity.ender_dragon.ambient',
                'entity.ender_dragon.death',
                'entity.ender_dragon.flap',
                'entity.ender_dragon.growl',
                'entity.ender_dragon.hurt',
                'entity.ender_dragon.shoot',
                'entity.ender_eye.death',
                'entity.ender_eye.launch',
                'entity.ender_pearl.throw',
                'entity.enderman.ambient',
                'entity.enderman.death',
                'entity.enderman.hurt',
                'entity.enderman.scream',
                'entity.enderman.stare',
                'entity.enderman.teleport',
                'entity.endermite.ambient',
                'entity.endermite.death',
                'entity.endermite.hurt',
                'entity.endermite.step',
                'entity.evoker.ambient',
                'entity.evoker.cast_spell',
                'entity.evoker.celebrate',
                'entity.evoker.death',
                'entity.evoker.hurt',
                'entity.evoker.prepare_attack',
                'entity.evoker.prepare_summon',
                'entity.evoker.prepare_wololo',
                'entity.evoker_fangs.attack',
                'entity.experience_bottle.throw',
                'entity.experience_orb.pickup',
                'entity.firework_rocket.blast',
                'entity.firework_rocket.blast_far',
                'entity.firework_rocket.large_blast',
                'entity.firework_rocket.large_blast_far',
                'entity.firework_rocket.launch',
                'entity.firework_rocket.shoot',
                'entity.firework_rocket.twinkle',
                'entity.firework_rocket.twinkle_far',
                'entity.fish.swim',
                'entity.fishing_bobber.retrieve',
                'entity.fishing_bobber.splash',
                'entity.fishing_bobber.throw',
                'entity.fox.aggro',
                'entity.fox.ambient',
                'entity.fox.bite',
                'entity.fox.death',
                'entity.fox.eat',
                'entity.fox.hurt',
                'entity.fox.screech',
                'entity.fox.sleep',
                'entity.fox.sniff',
                'entity.fox.spit',
                'entity.fox.teleport',
                'entity.generic.big_fall',
                'entity.generic.burn',
                'entity.generic.death',
                'entity.generic.drink',
                'entity.generic.eat',
                'entity.generic.explode',
                'entity.generic.extinguish_fire',
                'entity.generic.hurt',
                'entity.generic.small_fall',
                'entity.generic.splash',
                'entity.generic.swim',
                'entity.ghast.ambient',
                'entity.ghast.death',
                'entity.ghast.hurt',
                'entity.ghast.scream',
                'entity.ghast.shoot',
                'entity.ghast.warn',
                'entity.glow_item_frame.add_item',
                'entity.glow_item_frame.break',
                'entity.glow_item_frame.place',
                'entity.glow_item_frame.remove_item',
                'entity.glow_item_frame.rotate_item',
                'entity.glow_squid.ambient',
                'entity.glow_squid.death',
                'entity.glow_squid.hurt',
                'entity.glow_squid.squirt',
                'entity.goat.ambient',
                'entity.goat.death',
                'entity.goat.eat',
                'entity.goat.hurt',
                'entity.goat.long_jump',
                'entity.goat.milk',
                'entity.goat.prepare_ram',
                'entity.goat.ram_impact',
                'entity.goat.screaming.ambient',
                'entity.goat.screaming.death',
                'entity.goat.screaming.eat',
                'entity.goat.screaming.hurt',
                'entity.goat.screaming.long_jump',
                'entity.goat.screaming.milk',
                'entity.goat.screaming.prepare_ram',
                'entity.goat.screaming.ram_impact',
                'entity.goat.step',
                'entity.guardian.ambient',
                'entity.guardian.ambient_land',
                'entity.guardian.attack',
                'entity.guardian.death',
                'entity.guardian.death_land',
                'entity.guardian.flop',
                'entity.guardian.hurt',
                'entity.guardian.hurt_land',
                'entity.hoglin.ambient',
                'entity.hoglin.angry',
                'entity.hoglin.attack',
                'entity.hoglin.converted_to_zombified',
                'entity.hoglin.death',
                'entity.hoglin.hurt',
                'entity.hoglin.retreat',
                'entity.hoglin.step',
                'entity.horse.ambient',
                'entity.horse.angry',
                'entity.horse.armor',
                'entity.horse.breathe',
                'entity.horse.death',
                'entity.horse.eat',
                'entity.horse.gallop',
                'entity.horse.hurt',
                'entity.horse.jump',
                'entity.horse.land',
                'entity.horse.saddle',
                'entity.horse.step',
                'entity.horse.step_wood',
                'entity.hostile.big_fall',
                'entity.hostile.death',
                'entity.hostile.hurt',
                'entity.hostile.small_fall',
                'entity.hostile.splash',
                'entity.hostile.swim',
                'entity.husk.ambient',
                'entity.husk.converted_to_zombie',
                'entity.husk.death',
                'entity.husk.hurt',
                'entity.husk.step',
                'entity.illusioner.ambient',
                'entity.illusioner.cast_spell',
                'entity.illusioner.death',
                'entity.illusioner.hurt',
                'entity.illusioner.mirror_move',
                'entity.illusioner.prepare_blindness',
                'entity.illusioner.prepare_mirror',
                'entity.iron_golem.attack',
                'entity.iron_golem.damage',
                'entity.iron_golem.death',
                'entity.iron_golem.hurt',
                'entity.iron_golem.repair',
                'entity.iron_golem.step',
                'entity.item.break',
                'entity.item.pickup',
                'entity.item_frame.add_item',
                'entity.item_frame.break',
                'entity.item_frame.place',
                'entity.item_frame.remove_item',
                'entity.item_frame.rotate_item',
                'entity.leash_knot.break',
                'entity.leash_knot.place',
                'entity.lightning_bolt.impact',
                'entity.lightning_bolt.thunder',
                'entity.lingering_potion.throw',
                'entity.llama.ambient',
                'entity.llama.angry',
                'entity.llama.chest',
                'entity.llama.death',
                'entity.llama.eat',
                'entity.llama.hurt',
                'entity.llama.spit',
                'entity.llama.step',
                'entity.llama.swag',
                'entity.magma_cube.death',
                'entity.magma_cube.death_small',
                'entity.magma_cube.hurt',
                'entity.magma_cube.hurt_small',
                'entity.magma_cube.jump',
                'entity.magma_cube.squish',
                'entity.magma_cube.squish_small',
                'entity.minecart.inside',
                'entity.minecart.inside.underwater',
                'entity.minecart.riding',
                'entity.mooshroom.convert',
                'entity.mooshroom.eat',
                'entity.mooshroom.milk',
                'entity.mooshroom.shear',
                'entity.mooshroom.suspicious_milk',
                'entity.mule.ambient',
                'entity.mule.angry',
                'entity.mule.chest',
                'entity.mule.death',
                'entity.mule.eat',
                'entity.mule.hurt',
                'entity.ocelot.ambient',
                'entity.ocelot.death',
                'entity.ocelot.hurt',
                'entity.painting.break',
                'entity.painting.place',
                'entity.panda.aggressive_ambient',
                'entity.panda.ambient',
                'entity.panda.bite',
                'entity.panda.cant_breed',
                'entity.panda.death',
                'entity.panda.eat',
                'entity.panda.hurt',
                'entity.panda.pre_sneeze',
                'entity.panda.sneeze',
                'entity.panda.step',
                'entity.panda.worried_ambient',
                'entity.parrot.ambient',
                'entity.parrot.death',
                'entity.parrot.eat',
                'entity.parrot.fly',
                'entity.parrot.hurt',
                'entity.parrot.imitate.blaze',
                'entity.parrot.imitate.creeper',
                'entity.parrot.imitate.drowned',
                'entity.parrot.imitate.elder_guardian',
                'entity.parrot.imitate.ender_dragon',
                'entity.parrot.imitate.endermite',
                'entity.parrot.imitate.evoker',
                'entity.parrot.imitate.ghast',
                'entity.parrot.imitate.guardian',
                'entity.parrot.imitate.hoglin',
                'entity.parrot.imitate.husk',
                'entity.parrot.imitate.illusioner',
                'entity.parrot.imitate.magma_cube',
                'entity.parrot.imitate.phantom',
                'entity.parrot.imitate.piglin',
                'entity.parrot.imitate.piglin_brute',
                'entity.parrot.imitate.pillager',
                'entity.parrot.imitate.ravager',
                'entity.parrot.imitate.shulker',
                'entity.parrot.imitate.silverfish',
                'entity.parrot.imitate.skeleton',
                'entity.parrot.imitate.slime',
                'entity.parrot.imitate.spider',
                'entity.parrot.imitate.stray',
                'entity.parrot.imitate.vex',
                'entity.parrot.imitate.vindicator',
                'entity.parrot.imitate.witch',
                'entity.parrot.imitate.wither',
                'entity.parrot.imitate.wither_skeleton',
                'entity.parrot.imitate.zoglin',
                'entity.parrot.imitate.zombie',
                'entity.parrot.imitate.zombie_villager',
                'entity.parrot.step',
                'entity.phantom.ambient',
                'entity.phantom.bite',
                'entity.phantom.death',
                'entity.phantom.flap',
                'entity.phantom.hurt',
                'entity.phantom.swoop',
                'entity.pig.ambient',
                'entity.pig.death',
                'entity.pig.hurt',
                'entity.pig.saddle',
                'entity.pig.step',
                'entity.piglin.admiring_item',
                'entity.piglin.ambient',
                'entity.piglin.angry',
                'entity.piglin.celebrate',
                'entity.piglin.converted_to_zombified',
                'entity.piglin.death',
                'entity.piglin.hurt',
                'entity.piglin.jealous',
                'entity.piglin.retreat',
                'entity.piglin.step',
                'entity.piglin_brute.ambient',
                'entity.piglin_brute.angry',
                'entity.piglin_brute.converted_to_zombified',
                'entity.piglin_brute.death',
                'entity.piglin_brute.hurt',
                'entity.piglin_brute.step',
                'entity.pillager.ambient',
                'entity.pillager.celebrate',
                'entity.pillager.death',
                'entity.pillager.hurt',
                'entity.player.attack.crit',
                'entity.player.attack.knockback',
                'entity.player.attack.nodamage',
                'entity.player.attack.strong',
                'entity.player.attack.sweep',
                'entity.player.attack.weak',
                'entity.player.big_fall',
                'entity.player.breath',
                'entity.player.burp',
                'entity.player.death',
                'entity.player.hurt',
                'entity.player.hurt_drown',
                'entity.player.hurt_freeze',
                'entity.player.hurt_on_fire',
                'entity.player.hurt_sweet_berry_bush',
                'entity.player.levelup',
                'entity.player.small_fall',
                'entity.player.splash',
                'entity.player.splash.high_speed',
                'entity.player.swim',
                'entity.polar_bear.ambient',
                'entity.polar_bear.ambient_baby',
                'entity.polar_bear.death',
                'entity.polar_bear.hurt',
                'entity.polar_bear.step',
                'entity.polar_bear.warning',
                'entity.puffer_fish.ambient',
                'entity.puffer_fish.blow_out',
                'entity.puffer_fish.blow_up',
                'entity.puffer_fish.death',
                'entity.puffer_fish.flop',
                'entity.puffer_fish.hurt',
                'entity.puffer_fish.sting',
                'entity.rabbit.ambient',
                'entity.rabbit.attack',
                'entity.rabbit.death',
                'entity.rabbit.hurt',
                'entity.rabbit.jump',
                'entity.ravager.ambient',
                'entity.ravager.attack',
                'entity.ravager.celebrate',
                'entity.ravager.death',
                'entity.ravager.hurt',
                'entity.ravager.roar',
                'entity.ravager.step',
                'entity.ravager.stunned',
                'entity.salmon.ambient',
                'entity.salmon.death',
                'entity.salmon.flop',
                'entity.salmon.hurt',
                'entity.sheep.ambient',
                'entity.sheep.death',
                'entity.sheep.hurt',
                'entity.sheep.shear',
                'entity.sheep.step',
                'entity.shulker.ambient',
                'entity.shulker.close',
                'entity.shulker.death',
                'entity.shulker.hurt',
                'entity.shulker.hurt_closed',
                'entity.shulker.open',
                'entity.shulker.shoot',
                'entity.shulker.teleport',
                'entity.shulker_bullet.hit',
                'entity.shulker_bullet.hurt',
                'entity.silverfish.ambient',
                'entity.silverfish.death',
                'entity.silverfish.hurt',
                'entity.silverfish.step',
                'entity.skeleton.ambient',
                'entity.skeleton.converted_to_stray',
                'entity.skeleton.death',
                'entity.skeleton.hurt',
                'entity.skeleton.shoot',
                'entity.skeleton.step',
                'entity.skeleton_horse.ambient',
                'entity.skeleton_horse.ambient_water',
                'entity.skeleton_horse.death',
                'entity.skeleton_horse.gallop_water',
                'entity.skeleton_horse.hurt',
                'entity.skeleton_horse.jump_water',
                'entity.skeleton_horse.step_water',
                'entity.skeleton_horse.swim',
                'entity.slime.attack',
                'entity.slime.death',
                'entity.slime.death_small',
                'entity.slime.hurt',
                'entity.slime.hurt_small',
                'entity.slime.jump',
                'entity.slime.jump_small',
                'entity.slime.squish',
                'entity.slime.squish_small',
                'entity.snow_golem.ambient',
                'entity.snow_golem.death',
                'entity.snow_golem.hurt',
                'entity.snow_golem.shear',
                'entity.snow_golem.shoot',
                'entity.snowball.throw',
                'entity.spider.ambient',
                'entity.spider.death',
                'entity.spider.hurt',
                'entity.spider.step',
                'entity.splash_potion.break',
                'entity.splash_potion.throw',
                'entity.squid.ambient',
                'entity.squid.death',
                'entity.squid.hurt',
                'entity.squid.squirt',
                'entity.stray.ambient',
                'entity.stray.death',
                'entity.stray.hurt',
                'entity.stray.step',
                'entity.strider.ambient',
                'entity.strider.death',
                'entity.strider.eat',
                'entity.strider.happy',
                'entity.strider.hurt',
                'entity.strider.retreat',
                'entity.strider.saddle',
                'entity.strider.step',
                'entity.strider.step_lava',
                'entity.tnt.primed',
                'entity.tropical_fish.ambient',
                'entity.tropical_fish.death',
                'entity.tropical_fish.flop',
                'entity.tropical_fish.hurt',
                'entity.turtle.ambient_land',
                'entity.turtle.death',
                'entity.turtle.death_baby',
                'entity.turtle.egg_break',
                'entity.turtle.egg_crack',
                'entity.turtle.egg_hatch',
                'entity.turtle.hurt',
                'entity.turtle.hurt_baby',
                'entity.turtle.lay_egg',
                'entity.turtle.shamble',
                'entity.turtle.shamble_baby',
                'entity.turtle.swim',
                'entity.vex.ambient',
                'entity.vex.charge',
                'entity.vex.death',
                'entity.vex.hurt',
                'entity.villager.ambient',
                'entity.villager.celebrate',
                'entity.villager.death',
                'entity.villager.hurt',
                'entity.villager.no',
                'entity.villager.trade',
                'entity.villager.work_armorer',
                'entity.villager.work_butcher',
                'entity.villager.work_cartographer',
                'entity.villager.work_cleric',
                'entity.villager.work_farmer',
                'entity.villager.work_fisherman',
                'entity.villager.work_fletcher',
                'entity.villager.work_leatherworker',
                'entity.villager.work_librarian',
                'entity.villager.work_mason',
                'entity.villager.work_shepherd',
                'entity.villager.work_toolsmith',
                'entity.villager.work_weaponsmith',
                'entity.villager.yes',
                'entity.vindicator.ambient',
                'entity.vindicator.celebrate',
                'entity.vindicator.death',
                'entity.vindicator.hurt',
                'entity.wandering_trader.ambient',
                'entity.wandering_trader.death',
                'entity.wandering_trader.disappeared',
                'entity.wandering_trader.drink_milk',
                'entity.wandering_trader.drink_potion',
                'entity.wandering_trader.hurt',
                'entity.wandering_trader.no',
                'entity.wandering_trader.reappeared',
                'entity.wandering_trader.trade',
                'entity.wandering_trader.yes',
                'entity.witch.ambient',
                'entity.witch.celebrate',
                'entity.witch.death',
                'entity.witch.drink',
                'entity.witch.hurt',
                'entity.witch.throw',
                'entity.wither.ambient',
                'entity.wither.break_block',
                'entity.wither.death',
                'entity.wither.hurt',
                'entity.wither.shoot',
                'entity.wither.spawn',
                'entity.wither_skeleton.ambient',
                'entity.wither_skeleton.death',
                'entity.wither_skeleton.hurt',
                'entity.wither_skeleton.step',
                'entity.wolf.ambient',
                'entity.wolf.death',
                'entity.wolf.growl',
                'entity.wolf.howl',
                'entity.wolf.hurt',
                'entity.wolf.pant',
                'entity.wolf.shake',
                'entity.wolf.step',
                'entity.wolf.whine',
                'entity.zoglin.ambient',
                'entity.zoglin.angry',
                'entity.zoglin.attack',
                'entity.zoglin.death',
                'entity.zoglin.hurt',
                'entity.zoglin.step',
                'entity.zombie.ambient',
                'entity.zombie.attack_iron_door',
                'entity.zombie.attack_wooden_door',
                'entity.zombie.break_wooden_door',
                'entity.zombie.converted_to_drowned',
                'entity.zombie.death',
                'entity.zombie.destroy_egg',
                'entity.zombie.hurt',
                'entity.zombie.infect',
                'entity.zombie.step',
                'entity.zombie_horse.ambient',
                'entity.zombie_horse.death',
                'entity.zombie_horse.hurt',
                'entity.zombie_villager.ambient',
                'entity.zombie_villager.converted',
                'entity.zombie_villager.cure',
                'entity.zombie_villager.death',
                'entity.zombie_villager.hurt',
                'entity.zombie_villager.step',
                'entity.zombified_piglin.ambient',
                'entity.zombified_piglin.angry',
                'entity.zombified_piglin.death',
                'entity.zombified_piglin.hurt',
                'event.raid.horn',
                'item.armor.equip_chain',
                'item.armor.equip_diamond',
                'item.armor.equip_elytra',
                'item.armor.equip_generic',
                'item.armor.equip_gold',
                'item.armor.equip_iron',
                'item.armor.equip_leather',
                'item.armor.equip_netherite',
                'item.armor.equip_turtle',
                'item.axe.scrape',
                'item.axe.strip',
                'item.axe.wax_off',
                'item.bone_meal.use',
                'item.book.page_turn',
                'item.book.put',
                'item.bottle.empty',
                'item.bottle.fill',
                'item.bottle.fill_dragonbreath',
                'item.bucket.empty',
                'item.bucket.empty_axolotl',
                'item.bucket.empty_fish',
                'item.bucket.empty_lava',
                'item.bucket.empty_powder_snow',
                'item.bucket.fill',
                'item.bucket.fill_axolotl',
                'item.bucket.fill_fish',
                'item.bucket.fill_lava',
                'item.bucket.fill_powder_snow',
                'item.bundle.drop_contents',
                'item.bundle.insert',
                'item.bundle.remove_one',
                'item.chorus_fruit.teleport',
                'item.crop.plant',
                'item.crossbow.hit',
                'item.crossbow.loading_end',
                'item.crossbow.loading_middle',
                'item.crossbow.loading_start',
                'item.crossbow.quick_charge_1',
                'item.crossbow.quick_charge_2',
                'item.crossbow.quick_charge_3',
                'item.crossbow.shoot',
                'item.dye.use',
                'item.elytra.flying',
                'item.firecharge.use',
                'item.flintandsteel.use',
                'item.glow_ink_sac.use',
                'item.hoe.till',
                'item.honey_bottle.drink',
                'item.honeycomb.wax_on',
                'item.ink_sac.use',
                'item.lodestone_compass.lock',
                'item.nether_wart.plant',
                'item.shield.block',
                'item.shield.break',
                'item.shovel.flatten',
                'item.spyglass.stop_using',
                'item.spyglass.use',
                'item.totem.use',
                'item.trident.hit',
                'item.trident.hit_ground',
                'item.trident.return',
                'item.trident.riptide_1',
                'item.trident.riptide_2',
                'item.trident.riptide_3',
                'item.trident.throw',
                'item.trident.thunder',
                'music.creative',
                'music.credits',
                'music.dragon',
                'music.end',
                'music.game',
                'music.menu',
                'music.nether.basalt_deltas',
                'music.nether.crimson_forest',
                'music.nether.nether_wastes',
                'music.nether.soul_sand_valley',
                'music.nether.warped_forest',
                'music.overworld.dripstone_caves',
                'music.overworld.frozen_peaks',
                'music.overworld.grove',
                'music.overworld.jagged_peaks',
                'music.overworld.lush_caves',
                'music.overworld.meadow',
                'music.overworld.snowy_slopes',
                'music.overworld.stony_peaks',
                'music.under_water',
                'music_disc.11',
                'music_disc.13',
                'music_disc.blocks',
                'music_disc.cat',
                'music_disc.chirp',
                'music_disc.far',
                'music_disc.mall',
                'music_disc.mellohi',
                'music_disc.otherside',
                'music_disc.pigstep',
                'music_disc.stal',
                'music_disc.strad',
                'music_disc.wait',
                'music_disc.ward',
                'particle.soul_escape',
                'ui.button.click',
                'ui.cartography_table.take_result',
                'ui.loom.select_pattern',
                'ui.loom.take_result',
                'ui.stonecutter.select_recipe',
                'ui.stonecutter.take_result',
                'ui.toast.challenge_complete',
                'ui.toast.in',
                'ui.toast.out',
                'weather.rain',
                'weather.rain.above',
            ];
            break;
        case 'recipes':
            placeholder = [
                'acacia_boat',
                'acacia_button',
                'acacia_chest_boat',
                'acacia_door',
                'acacia_fence',
                'acacia_fence_gate',
                'acacia_planks',
                'acacia_pressure_plate',
                'acacia_sign',
                'acacia_slab',
                'acacia_stairs',
                'acacia_trapdoor',
                'acacia_wood',
                'activator_rail',
                'amethyst_block',
                'andesite',
                'andesite_slab',
                'andesite_slab_from_andesite_stonecutting',
                'andesite_stairs',
                'andesite_stairs_from_andesite_stonecutting',
                'andesite_wall',
                'andesite_wall_from_andesite_stonecutting',
                'anvil',
                'armor_dye',
                'armor_stand',
                'arrow',
                'baked_potato',
                'baked_potato_from_campfire_cooking',
                'baked_potato_from_smoking',
                'banner_duplicate',
                'barrel',
                'beacon',
                'beehive',
                'beetroot_soup',
                'birch_boat',
                'birch_button',
                'birch_chest_boat',
                'birch_door',
                'birch_fence',
                'birch_fence_gate',
                'birch_planks',
                'birch_pressure_plate',
                'birch_sign',
                'birch_slab',
                'birch_stairs',
                'birch_trapdoor',
                'birch_wood',
                'black_banner',
                'black_bed',
                'black_bed_from_white_bed',
                'black_candle',
                'black_carpet',
                'black_carpet_from_white_carpet',
                'black_concrete_powder',
                'black_dye',
                'black_dye_from_wither_rose',
                'black_glazed_terracotta',
                'black_stained_glass',
                'black_stained_glass_pane',
                'black_stained_glass_pane_from_glass_pane',
                'black_terracotta',
                'black_wool',
                'blackstone_slab',
                'blackstone_slab_from_blackstone_stonecutting',
                'blackstone_stairs',
                'blackstone_stairs_from_blackstone_stonecutting',
                'blackstone_wall',
                'blackstone_wall_from_blackstone_stonecutting',
                'blast_furnace',
                'blaze_powder',
                'blue_banner',
                'blue_bed',
                'blue_bed_from_white_bed',
                'blue_candle',
                'blue_carpet',
                'blue_carpet_from_white_carpet',
                'blue_concrete_powder',
                'blue_dye',
                'blue_dye_from_cornflower',
                'blue_glazed_terracotta',
                'blue_ice',
                'blue_stained_glass',
                'blue_stained_glass_pane',
                'blue_stained_glass_pane_from_glass_pane',
                'blue_terracotta',
                'blue_wool',
                'bone_block',
                'bone_meal',
                'bone_meal_from_bone_block',
                'book',
                'book_cloning',
                'bookshelf',
                'bow',
                'bowl',
                'bread',
                'brewing_stand',
                'brick',
                'brick_slab',
                'brick_slab_from_bricks_stonecutting',
                'brick_stairs',
                'brick_stairs_from_bricks_stonecutting',
                'brick_wall',
                'brick_wall_from_bricks_stonecutting',
                'bricks',
                'brown_banner',
                'brown_bed',
                'brown_bed_from_white_bed',
                'brown_candle',
                'brown_carpet',
                'brown_carpet_from_white_carpet',
                'brown_concrete_powder',
                'brown_dye',
                'brown_glazed_terracotta',
                'brown_stained_glass',
                'brown_stained_glass_pane',
                'brown_stained_glass_pane_from_glass_pane',
                'brown_terracotta',
                'brown_wool',
                'bucket',
                'cake',
                'campfire',
                'candle',
                'carrot_on_a_stick',
                'cartography_table',
                'cauldron',
                'chain',
                'charcoal',
                'chest',
                'chest_minecart',
                'chiseled_deepslate',
                'chiseled_deepslate_from_cobbled_deepslate_stonecutting',
                'chiseled_nether_bricks',
                'chiseled_nether_bricks_from_nether_bricks_stonecutting',
                'chiseled_polished_blackstone',
                'chiseled_polished_blackstone_from_blackstone_stonecutting',
                'chiseled_polished_blackstone_from_polished_blackstone_stonecutting',
                'chiseled_quartz_block',
                'chiseled_quartz_block_from_quartz_block_stonecutting',
                'chiseled_red_sandstone',
                'chiseled_red_sandstone_from_red_sandstone_stonecutting',
                'chiseled_sandstone',
                'chiseled_sandstone_from_sandstone_stonecutting',
                'chiseled_stone_bricks',
                'chiseled_stone_bricks_from_stone_bricks_stonecutting',
                'chiseled_stone_bricks_stone_from_stonecutting',
                'clay',
                'clock',
                'coal',
                'coal_block',
                'coal_from_blasting_coal_ore',
                'coal_from_blasting_deepslate_coal_ore',
                'coal_from_smelting_coal_ore',
                'coal_from_smelting_deepslate_coal_ore',
                'coarse_dirt',
                'cobbled_deepslate_slab',
                'cobbled_deepslate_slab_from_cobbled_deepslate_stonecutting',
                'cobbled_deepslate_stairs',
                'cobbled_deepslate_stairs_from_cobbled_deepslate_stonecutting',
                'cobbled_deepslate_wall',
                'cobbled_deepslate_wall_from_cobbled_deepslate_stonecutting',
                'cobblestone_slab',
                'cobblestone_slab_from_cobblestone_stonecutting',
                'cobblestone_stairs',
                'cobblestone_stairs_from_cobblestone_stonecutting',
                'cobblestone_wall',
                'cobblestone_wall_from_cobblestone_stonecutting',
                'comparator',
                'compass',
                'composter',
                'conduit',
                'cooked_beef',
                'cooked_beef_from_campfire_cooking',
                'cooked_beef_from_smoking',
                'cooked_chicken',
                'cooked_chicken_from_campfire_cooking',
                'cooked_chicken_from_smoking',
                'cooked_cod',
                'cooked_cod_from_campfire_cooking',
                'cooked_cod_from_smoking',
                'cooked_mutton',
                'cooked_mutton_from_campfire_cooking',
                'cooked_mutton_from_smoking',
                'cooked_porkchop',
                'cooked_porkchop_from_campfire_cooking',
                'cooked_porkchop_from_smoking',
                'cooked_rabbit',
                'cooked_rabbit_from_campfire_cooking',
                'cooked_rabbit_from_smoking',
                'cooked_salmon',
                'cooked_salmon_from_campfire_cooking',
                'cooked_salmon_from_smoking',
                'cookie',
                'copper_block',
                'copper_ingot',
                'copper_ingot_from_blasting_copper_ore',
                'copper_ingot_from_blasting_deepslate_copper_ore',
                'copper_ingot_from_blasting_raw_copper',
                'copper_ingot_from_smelting_copper_ore',
                'copper_ingot_from_smelting_deepslate_copper_ore',
                'copper_ingot_from_smelting_raw_copper',
                'copper_ingot_from_waxed_copper_block',
                'cracked_deepslate_bricks',
                'cracked_deepslate_tiles',
                'cracked_nether_bricks',
                'cracked_polished_blackstone_bricks',
                'cracked_stone_bricks',
                'crafting_table',
                'creeper_banner_pattern',
                'crimson_button',
                'crimson_door',
                'crimson_fence',
                'crimson_fence_gate',
                'crimson_hyphae',
                'crimson_planks',
                'crimson_pressure_plate',
                'crimson_sign',
                'crimson_slab',
                'crimson_stairs',
                'crimson_trapdoor',
                'crossbow',
                'cut_copper',
                'cut_copper_from_copper_block_stonecutting',
                'cut_copper_slab',
                'cut_copper_slab_from_copper_block_stonecutting',
                'cut_copper_slab_from_cut_copper_stonecutting',
                'cut_copper_stairs',
                'cut_copper_stairs_from_copper_block_stonecutting',
                'cut_copper_stairs_from_cut_copper_stonecutting',
                'cut_red_sandstone',
                'cut_red_sandstone_from_red_sandstone_stonecutting',
                'cut_red_sandstone_slab',
                'cut_red_sandstone_slab_from_cut_red_sandstone_stonecutting',
                'cut_red_sandstone_slab_from_red_sandstone_stonecutting',
                'cut_sandstone',
                'cut_sandstone_from_sandstone_stonecutting',
                'cut_sandstone_slab',
                'cut_sandstone_slab_from_cut_sandstone_stonecutting',
                'cut_sandstone_slab_from_sandstone_stonecutting',
                'cyan_banner',
                'cyan_bed',
                'cyan_bed_from_white_bed',
                'cyan_candle',
                'cyan_carpet',
                'cyan_carpet_from_white_carpet',
                'cyan_concrete_powder',
                'cyan_dye',
                'cyan_glazed_terracotta',
                'cyan_stained_glass',
                'cyan_stained_glass_pane',
                'cyan_stained_glass_pane_from_glass_pane',
                'cyan_terracotta',
                'cyan_wool',
                'dark_oak_boat',
                'dark_oak_button',
                'dark_oak_chest_boat',
                'dark_oak_door',
                'dark_oak_fence',
                'dark_oak_fence_gate',
                'dark_oak_planks',
                'dark_oak_pressure_plate',
                'dark_oak_sign',
                'dark_oak_slab',
                'dark_oak_stairs',
                'dark_oak_trapdoor',
                'dark_oak_wood',
                'dark_prismarine',
                'dark_prismarine_slab',
                'dark_prismarine_slab_from_dark_prismarine_stonecutting',
                'dark_prismarine_stairs',
                'dark_prismarine_stairs_from_dark_prismarine_stonecutting',
                'daylight_detector',
                'deepslate',
                'deepslate_brick_slab',
                'deepslate_brick_slab_from_cobbled_deepslate_stonecutting',
                'deepslate_brick_slab_from_deepslate_bricks_stonecutting',
                'deepslate_brick_slab_from_polished_deepslate_stonecutting',
                'deepslate_brick_stairs',
                'deepslate_brick_stairs_from_cobbled_deepslate_stonecutting',
                'deepslate_brick_stairs_from_deepslate_bricks_stonecutting',
                'deepslate_brick_stairs_from_polished_deepslate_stonecutting',
                'deepslate_brick_wall',
                'deepslate_brick_wall_from_cobbled_deepslate_stonecutting',
                'deepslate_brick_wall_from_deepslate_bricks_stonecutting',
                'deepslate_brick_wall_from_polished_deepslate_stonecutting',
                'deepslate_bricks',
                'deepslate_bricks_from_cobbled_deepslate_stonecutting',
                'deepslate_bricks_from_polished_deepslate_stonecutting',
                'deepslate_tile_slab',
                'deepslate_tile_slab_from_cobbled_deepslate_stonecutting',
                'deepslate_tile_slab_from_deepslate_bricks_stonecutting',
                'deepslate_tile_slab_from_deepslate_tiles_stonecutting',
                'deepslate_tile_slab_from_polished_deepslate_stonecutting',
                'deepslate_tile_stairs',
                'deepslate_tile_stairs_from_cobbled_deepslate_stonecutting',
                'deepslate_tile_stairs_from_deepslate_bricks_stonecutting',
                'deepslate_tile_stairs_from_deepslate_tiles_stonecutting',
                'deepslate_tile_stairs_from_polished_deepslate_stonecutting',
                'deepslate_tile_wall',
                'deepslate_tile_wall_from_cobbled_deepslate_stonecutting',
                'deepslate_tile_wall_from_deepslate_bricks_stonecutting',
                'deepslate_tile_wall_from_deepslate_tiles_stonecutting',
                'deepslate_tile_wall_from_polished_deepslate_stonecutting',
                'deepslate_tiles',
                'deepslate_tiles_from_cobbled_deepslate_stonecutting',
                'deepslate_tiles_from_deepslate_bricks_stonecutting',
                'deepslate_tiles_from_polished_deepslate_stonecutting',
                'detector_rail',
                'diamond',
                'diamond_axe',
                'diamond_block',
                'diamond_boots',
                'diamond_chestplate',
                'diamond_from_blasting_deepslate_diamond_ore',
                'diamond_from_blasting_diamond_ore',
                'diamond_from_smelting_deepslate_diamond_ore',
                'diamond_from_smelting_diamond_ore',
                'diamond_helmet',
                'diamond_hoe',
                'diamond_leggings',
                'diamond_pickaxe',
                'diamond_shovel',
                'diamond_sword',
                'diorite',
                'diorite_slab',
                'diorite_slab_from_diorite_stonecutting',
                'diorite_stairs',
                'diorite_stairs_from_diorite_stonecutting',
                'diorite_wall',
                'diorite_wall_from_diorite_stonecutting',
                'dispenser',
                'dried_kelp',
                'dried_kelp_block',
                'dried_kelp_from_campfire_cooking',
                'dried_kelp_from_smelting',
                'dried_kelp_from_smoking',
                'dripstone_block',
                'dropper',
                'emerald',
                'emerald_block',
                'emerald_from_blasting_deepslate_emerald_ore',
                'emerald_from_blasting_emerald_ore',
                'emerald_from_smelting_deepslate_emerald_ore',
                'emerald_from_smelting_emerald_ore',
                'enchanting_table',
                'end_crystal',
                'end_rod',
                'end_stone_brick_slab',
                'end_stone_brick_slab_from_end_stone_brick_stonecutting',
                'end_stone_brick_slab_from_end_stone_stonecutting',
                'end_stone_brick_stairs',
                'end_stone_brick_stairs_from_end_stone_brick_stonecutting',
                'end_stone_brick_stairs_from_end_stone_stonecutting',
                'end_stone_brick_wall',
                'end_stone_brick_wall_from_end_stone_brick_stonecutting',
                'end_stone_brick_wall_from_end_stone_stonecutting',
                'end_stone_bricks',
                'end_stone_bricks_from_end_stone_stonecutting',
                'ender_chest',
                'ender_eye',
                'exposed_cut_copper',
                'exposed_cut_copper_from_exposed_copper_stonecutting',
                'exposed_cut_copper_slab',
                'exposed_cut_copper_slab_from_exposed_copper_stonecutting',
                'exposed_cut_copper_slab_from_exposed_cut_copper_stonecutting',
                'exposed_cut_copper_stairs',
                'exposed_cut_copper_stairs_from_exposed_copper_stonecutting',
                'exposed_cut_copper_stairs_from_exposed_cut_copper_stonecutting',
                'fermented_spider_eye',
                'fire_charge',
                'firework_rocket',
                'firework_rocket_simple',
                'firework_star',
                'firework_star_fade',
                'fishing_rod',
                'fletching_table',
                'flint_and_steel',
                'flower_banner_pattern',
                'flower_pot',
                'furnace',
                'furnace_minecart',
                'glass',
                'glass_bottle',
                'glass_pane',
                'glistering_melon_slice',
                'glow_item_frame',
                'glowstone',
                'gold_block',
                'gold_ingot_from_blasting_deepslate_gold_ore',
                'gold_ingot_from_blasting_gold_ore',
                'gold_ingot_from_blasting_nether_gold_ore',
                'gold_ingot_from_blasting_raw_gold',
                'gold_ingot_from_gold_block',
                'gold_ingot_from_nuggets',
                'gold_ingot_from_smelting_deepslate_gold_ore',
                'gold_ingot_from_smelting_gold_ore',
                'gold_ingot_from_smelting_nether_gold_ore',
                'gold_ingot_from_smelting_raw_gold',
                'gold_nugget',
                'gold_nugget_from_blasting',
                'gold_nugget_from_smelting',
                'golden_apple',
                'golden_axe',
                'golden_boots',
                'golden_carrot',
                'golden_chestplate',
                'golden_helmet',
                'golden_hoe',
                'golden_leggings',
                'golden_pickaxe',
                'golden_shovel',
                'golden_sword',
                'granite',
                'granite_slab',
                'granite_slab_from_granite_stonecutting',
                'granite_stairs',
                'granite_stairs_from_granite_stonecutting',
                'granite_wall',
                'granite_wall_from_granite_stonecutting',
                'gray_banner',
                'gray_bed',
                'gray_bed_from_white_bed',
                'gray_candle',
                'gray_carpet',
                'gray_carpet_from_white_carpet',
                'gray_concrete_powder',
                'gray_dye',
                'gray_glazed_terracotta',
                'gray_stained_glass',
                'gray_stained_glass_pane',
                'gray_stained_glass_pane_from_glass_pane',
                'gray_terracotta',
                'gray_wool',
                'green_banner',
                'green_bed',
                'green_bed_from_white_bed',
                'green_candle',
                'green_carpet',
                'green_carpet_from_white_carpet',
                'green_concrete_powder',
                'green_dye',
                'green_glazed_terracotta',
                'green_stained_glass',
                'green_stained_glass_pane',
                'green_stained_glass_pane_from_glass_pane',
                'green_terracotta',
                'green_wool',
                'grindstone',
                'hay_block',
                'heavy_weighted_pressure_plate',
                'honey_block',
                'honey_bottle',
                'honeycomb_block',
                'hopper',
                'hopper_minecart',
                'iron_axe',
                'iron_bars',
                'iron_block',
                'iron_boots',
                'iron_chestplate',
                'iron_door',
                'iron_helmet',
                'iron_hoe',
                'iron_ingot_from_blasting_deepslate_iron_ore',
                'iron_ingot_from_blasting_iron_ore',
                'iron_ingot_from_blasting_raw_iron',
                'iron_ingot_from_iron_block',
                'iron_ingot_from_nuggets',
                'iron_ingot_from_smelting_deepslate_iron_ore',
                'iron_ingot_from_smelting_iron_ore',
                'iron_ingot_from_smelting_raw_iron',
                'iron_leggings',
                'iron_nugget',
                'iron_nugget_from_blasting',
                'iron_nugget_from_smelting',
                'iron_pickaxe',
                'iron_shovel',
                'iron_sword',
                'iron_trapdoor',
                'item_frame',
                'jack_o_lantern',
                'jukebox',
                'jungle_boat',
                'jungle_button',
                'jungle_chest_boat',
                'jungle_door',
                'jungle_fence',
                'jungle_fence_gate',
                'jungle_planks',
                'jungle_pressure_plate',
                'jungle_sign',
                'jungle_slab',
                'jungle_stairs',
                'jungle_trapdoor',
                'jungle_wood',
                'ladder',
                'lantern',
                'lapis_block',
                'lapis_lazuli',
                'lapis_lazuli_from_blasting_deepslate_lapis_ore',
                'lapis_lazuli_from_blasting_lapis_ore',
                'lapis_lazuli_from_smelting_deepslate_lapis_ore',
                'lapis_lazuli_from_smelting_lapis_ore',
                'lead',
                'leather',
                'leather_boots',
                'leather_chestplate',
                'leather_helmet',
                'leather_horse_armor',
                'leather_leggings',
                'lectern',
                'lever',
                'light_blue_banner',
                'light_blue_bed',
                'light_blue_bed_from_white_bed',
                'light_blue_candle',
                'light_blue_carpet',
                'light_blue_carpet_from_white_carpet',
                'light_blue_concrete_powder',
                'light_blue_dye_from_blue_orchid',
                'light_blue_dye_from_blue_white_dye',
                'light_blue_glazed_terracotta',
                'light_blue_stained_glass',
                'light_blue_stained_glass_pane',
                'light_blue_stained_glass_pane_from_glass_pane',
                'light_blue_terracotta',
                'light_blue_wool',
                'light_gray_banner',
                'light_gray_bed',
                'light_gray_bed_from_white_bed',
                'light_gray_candle',
                'light_gray_carpet',
                'light_gray_carpet_from_white_carpet',
                'light_gray_concrete_powder',
                'light_gray_dye_from_azure_bluet',
                'light_gray_dye_from_black_white_dye',
                'light_gray_dye_from_gray_white_dye',
                'light_gray_dye_from_oxeye_daisy',
                'light_gray_dye_from_white_tulip',
                'light_gray_glazed_terracotta',
                'light_gray_stained_glass',
                'light_gray_stained_glass_pane',
                'light_gray_stained_glass_pane_from_glass_pane',
                'light_gray_terracotta',
                'light_gray_wool',
                'light_weighted_pressure_plate',
                'lightning_rod',
                'lime_banner',
                'lime_bed',
                'lime_bed_from_white_bed',
                'lime_candle',
                'lime_carpet',
                'lime_carpet_from_white_carpet',
                'lime_concrete_powder',
                'lime_dye',
                'lime_dye_from_smelting',
                'lime_glazed_terracotta',
                'lime_stained_glass',
                'lime_stained_glass_pane',
                'lime_stained_glass_pane_from_glass_pane',
                'lime_terracotta',
                'lime_wool',
                'lodestone',
                'loom',
                'magenta_banner',
                'magenta_bed',
                'magenta_bed_from_white_bed',
                'magenta_candle',
                'magenta_carpet',
                'magenta_carpet_from_white_carpet',
                'magenta_concrete_powder',
                'magenta_dye_from_allium',
                'magenta_dye_from_blue_red_pink',
                'magenta_dye_from_blue_red_white_dye',
                'magenta_dye_from_lilac',
                'magenta_dye_from_purple_and_pink',
                'magenta_glazed_terracotta',
                'magenta_stained_glass',
                'magenta_stained_glass_pane',
                'magenta_stained_glass_pane_from_glass_pane',
                'magenta_terracotta',
                'magenta_wool',
                'magma_block',
                'magma_cream',
                'mangrove_boat',
                'mangrove_button',
                'mangrove_chest_boat',
                'mangrove_door',
                'mangrove_fence',
                'mangrove_fence_gate',
                'mangrove_planks',
                'mangrove_pressure_plate',
                'mangrove_sign',
                'mangrove_slab',
                'mangrove_stairs',
                'mangrove_trapdoor',
                'mangrove_wood',
                'map',
                'map_cloning',
                'map_extending',
                'melon',
                'melon_seeds',
                'minecart',
                'mojang_banner_pattern',
                'moss_carpet',
                'mossy_cobblestone_from_moss_block',
                'mossy_cobblestone_from_vine',
                'mossy_cobblestone_slab',
                'mossy_cobblestone_slab_from_mossy_cobblestone_stonecutting',
                'mossy_cobblestone_stairs',
                'mossy_cobblestone_stairs_from_mossy_cobblestone_stonecutting',
                'mossy_cobblestone_wall',
                'mossy_cobblestone_wall_from_mossy_cobblestone_stonecutting',
                'mossy_stone_brick_slab',
                'mossy_stone_brick_slab_from_mossy_stone_brick_stonecutting',
                'mossy_stone_brick_stairs',
                'mossy_stone_brick_stairs_from_mossy_stone_brick_stonecutting',
                'mossy_stone_brick_wall',
                'mossy_stone_brick_wall_from_mossy_stone_brick_stonecutting',
                'mossy_stone_bricks_from_moss_block',
                'mossy_stone_bricks_from_vine',
                'mud_brick_slab',
                'mud_brick_slab_from_mud_bricks_stonecutting',
                'mud_brick_stairs',
                'mud_brick_stairs_from_mud_bricks_stonecutting',
                'mud_brick_wall',
                'mud_brick_wall_from_mud_bricks_stonecutting',
                'mud_bricks',
                'muddy_mangrove_roots',
                'mushroom_stew',
                'music_disc_5',
                'nether_brick',
                'nether_brick_fence',
                'nether_brick_slab',
                'nether_brick_slab_from_nether_bricks_stonecutting',
                'nether_brick_stairs',
                'nether_brick_stairs_from_nether_bricks_stonecutting',
                'nether_brick_wall',
                'nether_brick_wall_from_nether_bricks_stonecutting',
                'nether_bricks',
                'nether_wart_block',
                'netherite_axe_smithing',
                'netherite_block',
                'netherite_boots_smithing',
                'netherite_chestplate_smithing',
                'netherite_helmet_smithing',
                'netherite_hoe_smithing',
                'netherite_ingot',
                'netherite_ingot_from_netherite_block',
                'netherite_leggings_smithing',
                'netherite_pickaxe_smithing',
                'netherite_scrap',
                'netherite_scrap_from_blasting',
                'netherite_shovel_smithing',
                'netherite_sword_smithing',
                'note_block',
                'oak_boat',
                'oak_button',
                'oak_chest_boat',
                'oak_door',
                'oak_fence',
                'oak_fence_gate',
                'oak_planks',
                'oak_pressure_plate',
                'oak_sign',
                'oak_slab',
                'oak_stairs',
                'oak_trapdoor',
                'oak_wood',
                'observer',
                'orange_banner',
                'orange_bed',
                'orange_bed_from_white_bed',
                'orange_candle',
                'orange_carpet',
                'orange_carpet_from_white_carpet',
                'orange_concrete_powder',
                'orange_dye_from_orange_tulip',
                'orange_dye_from_red_yellow',
                'orange_glazed_terracotta',
                'orange_stained_glass',
                'orange_stained_glass_pane',
                'orange_stained_glass_pane_from_glass_pane',
                'orange_terracotta',
                'orange_wool',
                'oxidized_cut_copper',
                'oxidized_cut_copper_from_oxidized_copper_stonecutting',
                'oxidized_cut_copper_slab',
                'oxidized_cut_copper_slab_from_oxidized_copper_stonecutting',
                'oxidized_cut_copper_slab_from_oxidized_cut_copper_stonecutting',
                'oxidized_cut_copper_stairs',
                'oxidized_cut_copper_stairs_from_oxidized_copper_stonecutting',
                'oxidized_cut_copper_stairs_from_oxidized_cut_copper_stonecutting',
                'packed_ice',
                'packed_mud',
                'painting',
                'paper',
                'pink_banner',
                'pink_bed',
                'pink_bed_from_white_bed',
                'pink_candle',
                'pink_carpet',
                'pink_carpet_from_white_carpet',
                'pink_concrete_powder',
                'pink_dye_from_peony',
                'pink_dye_from_pink_tulip',
                'pink_dye_from_red_white_dye',
                'pink_glazed_terracotta',
                'pink_stained_glass',
                'pink_stained_glass_pane',
                'pink_stained_glass_pane_from_glass_pane',
                'pink_terracotta',
                'pink_wool',
                'piston',
                'polished_andesite',
                'polished_andesite_from_andesite_stonecutting',
                'polished_andesite_slab',
                'polished_andesite_slab_from_andesite_stonecutting',
                'polished_andesite_slab_from_polished_andesite_stonecutting',
                'polished_andesite_stairs',
                'polished_andesite_stairs_from_andesite_stonecutting',
                'polished_andesite_stairs_from_polished_andesite_stonecutting',
                'polished_basalt',
                'polished_basalt_from_basalt_stonecutting',
                'polished_blackstone',
                'polished_blackstone_brick_slab',
                'polished_blackstone_brick_slab_from_blackstone_stonecutting',
                'polished_blackstone_brick_slab_from_polished_blackstone_bricks_stonecutting',
                'polished_blackstone_brick_slab_from_polished_blackstone_stonecutting',
                'polished_blackstone_brick_stairs',
                'polished_blackstone_brick_stairs_from_blackstone_stonecutting',
                'polished_blackstone_brick_stairs_from_polished_blackstone_bricks_stonecutting',
                'polished_blackstone_brick_stairs_from_polished_blackstone_stonecutting',
                'polished_blackstone_brick_wall',
                'polished_blackstone_brick_wall_from_blackstone_stonecutting',
                'polished_blackstone_brick_wall_from_polished_blackstone_bricks_stonecutting',
                'polished_blackstone_brick_wall_from_polished_blackstone_stonecutting',
                'polished_blackstone_bricks',
                'polished_blackstone_bricks_from_blackstone_stonecutting',
                'polished_blackstone_bricks_from_polished_blackstone_stonecutting',
                'polished_blackstone_button',
                'polished_blackstone_from_blackstone_stonecutting',
                'polished_blackstone_pressure_plate',
                'polished_blackstone_slab',
                'polished_blackstone_slab_from_blackstone_stonecutting',
                'polished_blackstone_slab_from_polished_blackstone_stonecutting',
                'polished_blackstone_stairs',
                'polished_blackstone_stairs_from_blackstone_stonecutting',
                'polished_blackstone_stairs_from_polished_blackstone_stonecutting',
                'polished_blackstone_wall',
                'polished_blackstone_wall_from_blackstone_stonecutting',
                'polished_blackstone_wall_from_polished_blackstone_stonecutting',
                'polished_deepslate',
                'polished_deepslate_from_cobbled_deepslate_stonecutting',
                'polished_deepslate_slab',
                'polished_deepslate_slab_from_cobbled_deepslate_stonecutting',
                'polished_deepslate_slab_from_polished_deepslate_stonecutting',
                'polished_deepslate_stairs',
                'polished_deepslate_stairs_from_cobbled_deepslate_stonecutting',
                'polished_deepslate_stairs_from_polished_deepslate_stonecutting',
                'polished_deepslate_wall',
                'polished_deepslate_wall_from_cobbled_deepslate_stonecutting',
                'polished_deepslate_wall_from_polished_deepslate_stonecutting',
                'polished_diorite',
                'polished_diorite_from_diorite_stonecutting',
                'polished_diorite_slab',
                'polished_diorite_slab_from_diorite_stonecutting',
                'polished_diorite_slab_from_polished_diorite_stonecutting',
                'polished_diorite_stairs',
                'polished_diorite_stairs_from_diorite_stonecutting',
                'polished_diorite_stairs_from_polished_diorite_stonecutting',
                'polished_granite',
                'polished_granite_from_granite_stonecutting',
                'polished_granite_slab',
                'polished_granite_slab_from_granite_stonecutting',
                'polished_granite_slab_from_polished_granite_stonecutting',
                'polished_granite_stairs',
                'polished_granite_stairs_from_granite_stonecutting',
                'polished_granite_stairs_from_polished_granite_stonecutting',
                'popped_chorus_fruit',
                'powered_rail',
                'prismarine',
                'prismarine_brick_slab',
                'prismarine_brick_slab_from_prismarine_stonecutting',
                'prismarine_brick_stairs',
                'prismarine_brick_stairs_from_prismarine_stonecutting',
                'prismarine_bricks',
                'prismarine_slab',
                'prismarine_slab_from_prismarine_stonecutting',
                'prismarine_stairs',
                'prismarine_stairs_from_prismarine_stonecutting',
                'prismarine_wall',
                'prismarine_wall_from_prismarine_stonecutting',
                'pumpkin_pie',
                'pumpkin_seeds',
                'purple_banner',
                'purple_bed',
                'purple_bed_from_white_bed',
                'purple_candle',
                'purple_carpet',
                'purple_carpet_from_white_carpet',
                'purple_concrete_powder',
                'purple_dye',
                'purple_glazed_terracotta',
                'purple_stained_glass',
                'purple_stained_glass_pane',
                'purple_stained_glass_pane_from_glass_pane',
                'purple_terracotta',
                'purple_wool',
                'purpur_block',
                'purpur_pillar',
                'purpur_pillar_from_purpur_block_stonecutting',
                'purpur_slab',
                'purpur_slab_from_purpur_block_stonecutting',
                'purpur_stairs',
                'purpur_stairs_from_purpur_block_stonecutting',
                'quartz',
                'quartz_block',
                'quartz_bricks',
                'quartz_bricks_from_quartz_block_stonecutting',
                'quartz_from_blasting',
                'quartz_pillar',
                'quartz_pillar_from_quartz_block_stonecutting',
                'quartz_slab',
                'quartz_slab_from_stonecutting',
                'quartz_stairs',
                'quartz_stairs_from_quartz_block_stonecutting',
                'rabbit_stew_from_brown_mushroom',
                'rabbit_stew_from_red_mushroom',
                'rail',
                'raw_copper',
                'raw_copper_block',
                'raw_gold',
                'raw_gold_block',
                'raw_iron',
                'raw_iron_block',
                'recovery_compass',
                'red_banner',
                'red_bed',
                'red_bed_from_white_bed',
                'red_candle',
                'red_carpet',
                'red_carpet_from_white_carpet',
                'red_concrete_powder',
                'red_dye_from_beetroot',
                'red_dye_from_poppy',
                'red_dye_from_rose_bush',
                'red_dye_from_tulip',
                'red_glazed_terracotta',
                'red_nether_brick_slab',
                'red_nether_brick_slab_from_red_nether_bricks_stonecutting',
                'red_nether_brick_stairs',
                'red_nether_brick_stairs_from_red_nether_bricks_stonecutting',
                'red_nether_brick_wall',
                'red_nether_brick_wall_from_red_nether_bricks_stonecutting',
                'red_nether_bricks',
                'red_sandstone',
                'red_sandstone_slab',
                'red_sandstone_slab_from_red_sandstone_stonecutting',
                'red_sandstone_stairs',
                'red_sandstone_stairs_from_red_sandstone_stonecutting',
                'red_sandstone_wall',
                'red_sandstone_wall_from_red_sandstone_stonecutting',
                'red_stained_glass',
                'red_stained_glass_pane',
                'red_stained_glass_pane_from_glass_pane',
                'red_terracotta',
                'red_wool',
                'redstone',
                'redstone_block',
                'redstone_from_blasting_deepslate_redstone_ore',
                'redstone_from_blasting_redstone_ore',
                'redstone_from_smelting_deepslate_redstone_ore',
                'redstone_from_smelting_redstone_ore',
                'redstone_lamp',
                'redstone_torch',
                'repair_item',
                'repeater',
                'respawn_anchor',
                'sandstone',
                'sandstone_slab',
                'sandstone_slab_from_sandstone_stonecutting',
                'sandstone_stairs',
                'sandstone_stairs_from_sandstone_stonecutting',
                'sandstone_wall',
                'sandstone_wall_from_sandstone_stonecutting',
                'scaffolding',
                'sea_lantern',
                'shears',
                'shield',
                'shield_decoration',
                'shulker_box',
                'shulker_box_coloring',
                'skull_banner_pattern',
                'slime_ball',
                'slime_block',
                'smithing_table',
                'smoker',
                'smooth_basalt',
                'smooth_quartz',
                'smooth_quartz_slab',
                'smooth_quartz_slab_from_smooth_quartz_stonecutting',
                'smooth_quartz_stairs',
                'smooth_quartz_stairs_from_smooth_quartz_stonecutting',
                'smooth_red_sandstone',
                'smooth_red_sandstone_slab',
                'smooth_red_sandstone_slab_from_smooth_red_sandstone_stonecutting',
                'smooth_red_sandstone_stairs',
                'smooth_red_sandstone_stairs_from_smooth_red_sandstone_stonecutting',
                'smooth_sandstone',
                'smooth_sandstone_slab',
                'smooth_sandstone_slab_from_smooth_sandstone_stonecutting',
                'smooth_sandstone_stairs',
                'smooth_sandstone_stairs_from_smooth_sandstone_stonecutting',
                'smooth_stone',
                'smooth_stone_slab',
                'smooth_stone_slab_from_smooth_stone_stonecutting',
                'snow',
                'snow_block',
                'soul_campfire',
                'soul_lantern',
                'soul_torch',
                'spectral_arrow',
                'sponge',
                'spruce_boat',
                'spruce_button',
                'spruce_chest_boat',
                'spruce_door',
                'spruce_fence',
                'spruce_fence_gate',
                'spruce_planks',
                'spruce_pressure_plate',
                'spruce_sign',
                'spruce_slab',
                'spruce_stairs',
                'spruce_trapdoor',
                'spruce_wood',
                'spyglass',
                'stick',
                'stick_from_bamboo_item',
                'sticky_piston',
                'stone',
                'stone_axe',
                'stone_brick_slab',
                'stone_brick_slab_from_stone_bricks_stonecutting',
                'stone_brick_slab_from_stone_stonecutting',
                'stone_brick_stairs',
                'stone_brick_stairs_from_stone_bricks_stonecutting',
                'stone_brick_stairs_from_stone_stonecutting',
                'stone_brick_wall',
                'stone_brick_wall_from_stone_bricks_stonecutting',
                'stone_brick_walls_from_stone_stonecutting',
                'stone_bricks',
                'stone_bricks_from_stone_stonecutting',
                'stone_button',
                'stone_hoe',
                'stone_pickaxe',
                'stone_pressure_plate',
                'stone_shovel',
                'stone_slab',
                'stone_slab_from_stone_stonecutting',
                'stone_stairs',
                'stone_stairs_from_stone_stonecutting',
                'stone_sword',
                'stonecutter',
                'stripped_acacia_wood',
                'stripped_birch_wood',
                'stripped_crimson_hyphae',
                'stripped_dark_oak_wood',
                'stripped_jungle_wood',
                'stripped_mangrove_wood',
                'stripped_oak_wood',
                'stripped_spruce_wood',
                'stripped_warped_hyphae',
                'sugar_from_honey_bottle',
                'sugar_from_sugar_cane',
                'suspicious_stew',
                'target',
                'terracotta',
                'tinted_glass',
                'tipped_arrow',
                'tnt',
                'tnt_minecart',
                'torch',
                'trapped_chest',
                'tripwire_hook',
                'turtle_helmet',
                'warped_button',
                'warped_door',
                'warped_fence',
                'warped_fence_gate',
                'warped_fungus_on_a_stick',
                'warped_hyphae',
                'warped_planks',
                'warped_pressure_plate',
                'warped_sign',
                'warped_slab',
                'warped_stairs',
                'warped_trapdoor',
                'waxed_copper_block_from_honeycomb',
                'waxed_cut_copper',
                'waxed_cut_copper_from_honeycomb',
                'waxed_cut_copper_from_waxed_copper_block_stonecutting',
                'waxed_cut_copper_slab',
                'waxed_cut_copper_slab_from_honeycomb',
                'waxed_cut_copper_slab_from_waxed_copper_block_stonecutting',
                'waxed_cut_copper_slab_from_waxed_cut_copper_stonecutting',
                'waxed_cut_copper_stairs',
                'waxed_cut_copper_stairs_from_honeycomb',
                'waxed_cut_copper_stairs_from_waxed_copper_block_stonecutting',
                'waxed_cut_copper_stairs_from_waxed_cut_copper_stonecutting',
                'waxed_exposed_copper_from_honeycomb',
                'waxed_exposed_cut_copper',
                'waxed_exposed_cut_copper_from_honeycomb',
                'waxed_exposed_cut_copper_from_waxed_exposed_copper_stonecutting',
                'waxed_exposed_cut_copper_slab',
                'waxed_exposed_cut_copper_slab_from_honeycomb',
                'waxed_exposed_cut_copper_slab_from_waxed_exposed_copper_stonecutting',
                'waxed_exposed_cut_copper_slab_from_waxed_exposed_cut_copper_stonecutting',
                'waxed_exposed_cut_copper_stairs',
                'waxed_exposed_cut_copper_stairs_from_honeycomb',
                'waxed_exposed_cut_copper_stairs_from_waxed_exposed_copper_stonecutting',
                'waxed_exposed_cut_copper_stairs_from_waxed_exposed_cut_copper_stonecutting',
                'waxed_oxidized_copper_from_honeycomb',
                'waxed_oxidized_cut_copper',
                'waxed_oxidized_cut_copper_from_honeycomb',
                'waxed_oxidized_cut_copper_from_waxed_oxidized_copper_stonecutting',
                'waxed_oxidized_cut_copper_slab',
                'waxed_oxidized_cut_copper_slab_from_honeycomb',
                'waxed_oxidized_cut_copper_slab_from_waxed_oxidized_copper_stonecutting',
                'waxed_oxidized_cut_copper_slab_from_waxed_oxidized_cut_copper_stonecutting',
                'waxed_oxidized_cut_copper_stairs',
                'waxed_oxidized_cut_copper_stairs_from_honeycomb',
                'waxed_oxidized_cut_copper_stairs_from_waxed_oxidized_copper_stonecutting',
                'waxed_oxidized_cut_copper_stairs_from_waxed_oxidized_cut_copper_stonecutting',
                'waxed_weathered_copper_from_honeycomb',
                'waxed_weathered_cut_copper',
                'waxed_weathered_cut_copper_from_honeycomb',
                'waxed_weathered_cut_copper_from_waxed_weathered_copper_stonecutting',
                'waxed_weathered_cut_copper_slab',
                'waxed_weathered_cut_copper_slab_from_honeycomb',
                'waxed_weathered_cut_copper_slab_from_waxed_weathered_copper_stonecutting',
                'waxed_weathered_cut_copper_slab_from_waxed_weathered_cut_copper_stonecutting',
                'waxed_weathered_cut_copper_stairs',
                'waxed_weathered_cut_copper_stairs_from_honeycomb',
                'waxed_weathered_cut_copper_stairs_from_waxed_weathered_copper_stonecutting',
                'waxed_weathered_cut_copper_stairs_from_waxed_weathered_cut_copper_stonecutting',
                'weathered_cut_copper',
                'weathered_cut_copper_from_weathered_copper_stonecutting',
                'weathered_cut_copper_slab',
                'weathered_cut_copper_slab_from_weathered_copper_stonecutting',
                'weathered_cut_copper_slab_from_weathered_cut_copper_stonecutting',
                'weathered_cut_copper_stairs',
                'weathered_cut_copper_stairs_from_weathered_copper_stonecutting',
                'weathered_cut_copper_stairs_from_weathered_cut_copper_stonecutting',
                'wheat',
                'white_banner',
                'white_bed',
                'white_candle',
                'white_carpet',
                'white_concrete_powder',
                'white_dye',
                'white_dye_from_lily_of_the_valley',
                'white_glazed_terracotta',
                'white_stained_glass',
                'white_stained_glass_pane',
                'white_stained_glass_pane_from_glass_pane',
                'white_terracotta',
                'white_wool_from_string',
                'wooden_axe',
                'wooden_hoe',
                'wooden_pickaxe',
                'wooden_shovel',
                'wooden_sword',
                'writable_book',
                'yellow_banner',
                'yellow_bed',
                'yellow_bed_from_white_bed',
                'yellow_candle',
                'yellow_carpet',
                'yellow_carpet_from_white_carpet',
                'yellow_concrete_powder',
                'yellow_dye_from_dandelion',
                'yellow_dye_from_sunflower',
                'yellow_glazed_terracotta',
                'yellow_stained_glass',
                'yellow_stained_glass_pane',
                'yellow_stained_glass_pane_from_glass_pane',
                'yellow_terracotta',
                'yellow_wool',
            ];
            break;
        case 'scoreboard_displays':
            placeholder = [
                'belowName',
                'list',
                'sidebar',
            ];
            colors.forEach(color => placeholder.push(`sidebar.team.${color}`));
            break;
        case 'scoreboard_criteria':
            [
                'deathCount',
                'playerKillCount',
                'totalKillCount',
                'air',
                'xp',
                'level',
                'food',
                'armor',
                'health',
                'dummy',
                'trigger',
            ].forEach(criteria => {
                placeholder[criteria] = criteria;
            });
            colors.forEach(color => {
                placeholder[`teamkill.${color}`] = `teamkill.${color}`;
                placeholder[`killedByTeam.${color}`] = `killedByTeam.${color}`;
            });

            for(const category of ['mined', 'broken', 'crafted', 'used', 'picked_up', 'dropped', 'killed', 'killed_by']) {
                const stats = utils.searchStats('', category, true, true, Infinity);
                stats.forEach(stat =>
                    placeholder[`${category}.${stat.name}`] = `minecraft.${category}:minecraft.${stat.name}`,
                );
            }
            break;
        case 'entities':
            mcData.entitiesArray.forEach(entity =>
                placeholder[entity.displayName] = entity.name,
            );
            break;
        case 'teams':
            if(!server) return {};
            const teams = await getNBTFile(...FilePath.Scoreboards(server.path, server.id));

            placeholder = teams?.data?.Teams?.map(team => team.Name) ?? {};
            break;
        case 'pois':
            placeholder = [
                'armorer',
                'bee_nest',
                'beehive',
                'butcher',
                'cartographer',
                'cleric',
                'farmer',
                'fisherman',
                'fletcher',
                'home',
                'leatherworker',
                'librarian',
                'lightning_rod',
                'lodestone',
                'mason',
                'meeting',
                'nether_portal',
                'shepherd',
                'toolsmith',
                'weaponsmith',
            ];
            break;
        case 'poi_tags':
            placeholder = [
                '#acquirable_job_site',
                '#bee_home',
                '#village',
            ];
            break;
        case 'jigsaws':
            placeholder = [
                'ancient_city/city/entrance',
                'ancient_city/city_center',
                'ancient_city/city_center/walls',
                'ancient_city/structures',
                'ancient_city/walls',
                'bastion/blocks',
                'bastion/bridge/bridge_pieces',
                'bastion/bridge/connectors',
                'bastion/bridge/legs',
                'bastion/bridge/ramparts',
                'bastion/bridge/rampart_plates',
                'bastion/bridge/starting_pieces',
                'bastion/bridge/walls',
                'bastion/hoglin_stable',
                'bastion/hoglin_stable/connectors',
                'bastion/hoglin_stable/large_stables',
                'bastion/hoglin_stable/posts',
                'bastion/hoglin_stable/ramparts',
                'bastion/hoglin_stable/rampart_plates',
                'bastion/hoglin_stable/small_stables',
                'bastion/hoglin_stable/stairs',
                'bastion/hoglin_stable/starting_pieces',
                'bastion/hoglin_stable/walls',
                'bastion/mobs',
                'bastion/treasure/bases/centers',
                'bastion/treasure/bases',
                'bastion/treasure',
                'bastion/treasure/brains',
                'bastion/treasure/connectors',
                'bastion/treasure/corners/bottom',
                'bastion/treasure/corners/edges',
                'bastion/treasure/corners/middle',
                'bastion/treasure/corners/top',
                'bastion/treasure/entrances',
                'bastion/treasure/extensions',
                'bastion/treasure/ramparts',
                'bastion/treasure/roofs',
                'bastion/treasure/stairs',
                'bastion/treasure/walls/bottom',
                'bastion/treasure/walls',
                'bastion/treasure/walls/mid',
                'bastion/treasure/walls/outer',
                'bastion/treasure/walls/top',
                'bastion/units',
                'bastion/units/center_pieces',
                'bastion/units/edges',
                'bastion/units/fillers',
                'bastion/units/pathways',
                'bastion/units/ramparts',
                'bastion/units/rampart_plates',
                'bastion/units/stages/rot',
                'bastion/units/stages',
                'bastion/units/walls',
                'bastion/units/wall_units',
                'end_city',
                'fossil',
                'igloo',
                'nether_fossils',
                'pillager_outpost',
                'ruined_portal',
                'shipwreck',
                'underwater_ruin',
                'village/common/animals',
                'village/common',
                'village/decays',
                'village/desert',
                'village/desert/houses',
                'village/desert/streets',
                'village/desert/terminators',
                'village/desert/town_centers',
                'village/desert/villagers',
                'village/desert/zombie/houses',
                'village/desert/zombie/streets',
                'village/desert/zombie/terminators',
                'village/desert/zombie/town_centers',
                'village/desert/zombie/villagers',
                'village/plains/houses',
                'village/plains',
                'village/plains/streets',
                'village/plains/terminators',
                'village/plains/town_centers',
                'village/plains/villagers',
                'village/plains/zombie/houses',
                'village/plains/zombie/streets',
                'village/plains/zombie/town_centers',
                'village/plains/zombie/villagers',
                'village/savanna/houses',
                'village/savanna',
                'village/savanna/streets',
                'village/savanna/terminators',
                'village/savanna/town_centers',
                'village/savanna/villagers',
                'village/savanna/zombie/houses',
                'village/savanna/zombie/streets',
                'village/savanna/zombie/terminators',
                'village/savanna/zombie/town_centers',
                'village/savanna/zombie/villagers',
                'village/snowy/houses',
                'village/snowy',
                'village/snowy/streets',
                'village/snowy/town_centers',
                'village/snowy/villagers',
                'village/snowy/zombie/houses',
                'village/snowy/zombie/streets',
                'village/snowy/zombie/town_centers',
                'village/snowy/zombie/villagers',
                'village/taiga/houses',
                'village/taiga/streets',
                'village/taiga',
                'village/taiga/town_centers',
                'village/taiga/villagers',
                'village/taiga/zombie/houses',
                'village/taiga/zombie/streets',
                'village/taiga/zombie/town_centers',
                'village/taiga/zombie/villagers',
                'woodland_mansion',
            ];
            break;
        case 'templates':
            placeholder = [
                'ancient_city/city/entrance/entrance_connector',
                'ancient_city/city/entrance/entrance_path_1',
                'ancient_city/city/entrance/entrance_path_2',
                'ancient_city/city/entrance/entrance_path_3',
                'ancient_city/city/entrance/entrance_path_4',
                'ancient_city/city/entrance/entrance_path_5',
                'ancient_city/city_center/city_center_1',
                'ancient_city/city_center/city_center_2',
                'ancient_city/city_center/city_center_3',
                'ancient_city/city_center/walls/bottom_1',
                'ancient_city/city_center/walls/bottom_2',
                'ancient_city/city_center/walls/bottom_left_corner',
                'ancient_city/city_center/walls/bottom_right_corner',
                'ancient_city/city_center/walls/bottom_right_corner_1',
                'ancient_city/city_center/walls/bottom_right_corner_2',
                'ancient_city/city_center/walls/left',
                'ancient_city/city_center/walls/right',
                'ancient_city/city_center/walls/top',
                'ancient_city/city_center/walls/top_left_corner',
                'ancient_city/city_center/walls/top_right_corner',
                'ancient_city/structures/barracks',
                'ancient_city/structures/camp_1',
                'ancient_city/structures/camp_2',
                'ancient_city/structures/camp_3',
                'ancient_city/structures/chamber_1',
                'ancient_city/structures/chamber_2',
                'ancient_city/structures/chamber_3',
                'ancient_city/structures/ice_box_1',
                'ancient_city/structures/large_pillar_1',
                'ancient_city/structures/large_ruin_1',
                'ancient_city/structures/medium_pillar_1',
                'ancient_city/structures/medium_ruin_1',
                'ancient_city/structures/medium_ruin_2',
                'ancient_city/structures/sauna_1',
                'ancient_city/structures/small_ruin_1',
                'ancient_city/structures/small_ruin_2',
                'ancient_city/structures/small_statue',
                'ancient_city/structures/tall_ruin_1',
                'ancient_city/structures/tall_ruin_2',
                'ancient_city/structures/tall_ruin_3',
                'ancient_city/structures/tall_ruin_4',
                'ancient_city/walls/intact_corner_wall_1',
                'ancient_city/walls/intact_horizontal_wall_1',
                'ancient_city/walls/intact_horizontal_wall_2',
                'ancient_city/walls/intact_horizontal_wall_bridge',
                'ancient_city/walls/intact_horizontal_wall_passage_1',
                'ancient_city/walls/intact_horizontal_wall_stairs_1',
                'ancient_city/walls/intact_horizontal_wall_stairs_2',
                'ancient_city/walls/intact_horizontal_wall_stairs_3',
                'ancient_city/walls/intact_horizontal_wall_stairs_4',
                'ancient_city/walls/intact_intersection_wall_1',
                'ancient_city/walls/intact_lshape_wall_1',
                'ancient_city/walls/ruined_corner_wall_1',
                'ancient_city/walls/ruined_corner_wall_2',
                'ancient_city/walls/ruined_horizontal_wall_stairs_1',
                'ancient_city/walls/ruined_horizontal_wall_stairs_2',
                'ancient_city/walls/ruined_horizontal_wall_stairs_3',
                'ancient_city/walls/ruined_horizontal_wall_stairs_4',
                'bastion/blocks/air',
                'bastion/blocks/gold',
                'bastion/bridge/bridge_pieces/bridge',
                'bastion/bridge/connectors/back_bridge_bottom',
                'bastion/bridge/connectors/back_bridge_top',
                'bastion/bridge/legs/leg_0',
                'bastion/bridge/legs/leg_1',
                'bastion/bridge/ramparts/rampart_0',
                'bastion/bridge/ramparts/rampart_1',
                'bastion/bridge/rampart_plates/plate_0',
                'bastion/bridge/starting_pieces/entrance',
                'bastion/bridge/starting_pieces/entrance_base',
                'bastion/bridge/starting_pieces/entrance_face',
                'bastion/bridge/walls/wall_base_0',
                'bastion/bridge/walls/wall_base_1',
                'bastion/hoglin_stable/air_base',
                'bastion/hoglin_stable/connectors/end_post_connector',
                'bastion/hoglin_stable/large_stables/inner_0',
                'bastion/hoglin_stable/large_stables/inner_1',
                'bastion/hoglin_stable/large_stables/inner_2',
                'bastion/hoglin_stable/large_stables/inner_3',
                'bastion/hoglin_stable/large_stables/inner_4',
                'bastion/hoglin_stable/large_stables/outer_0',
                'bastion/hoglin_stable/large_stables/outer_1',
                'bastion/hoglin_stable/large_stables/outer_2',
                'bastion/hoglin_stable/large_stables/outer_3',
                'bastion/hoglin_stable/large_stables/outer_4',
                'bastion/hoglin_stable/posts/end_post',
                'bastion/hoglin_stable/posts/stair_post',
                'bastion/hoglin_stable/ramparts/ramparts_1',
                'bastion/hoglin_stable/ramparts/ramparts_2',
                'bastion/hoglin_stable/ramparts/ramparts_3',
                'bastion/hoglin_stable/rampart_plates/rampart_plate_1',
                'bastion/hoglin_stable/small_stables/inner_0',
                'bastion/hoglin_stable/small_stables/inner_1',
                'bastion/hoglin_stable/small_stables/inner_2',
                'bastion/hoglin_stable/small_stables/inner_3',
                'bastion/hoglin_stable/small_stables/outer_0',
                'bastion/hoglin_stable/small_stables/outer_1',
                'bastion/hoglin_stable/small_stables/outer_2',
                'bastion/hoglin_stable/small_stables/outer_3',
                'bastion/hoglin_stable/stairs/stairs_1_0',
                'bastion/hoglin_stable/stairs/stairs_1_1',
                'bastion/hoglin_stable/stairs/stairs_1_2',
                'bastion/hoglin_stable/stairs/stairs_1_3',
                'bastion/hoglin_stable/stairs/stairs_1_4',
                'bastion/hoglin_stable/stairs/stairs_2_0',
                'bastion/hoglin_stable/stairs/stairs_2_1',
                'bastion/hoglin_stable/stairs/stairs_2_2',
                'bastion/hoglin_stable/stairs/stairs_2_3',
                'bastion/hoglin_stable/stairs/stairs_2_4',
                'bastion/hoglin_stable/stairs/stairs_3_0',
                'bastion/hoglin_stable/stairs/stairs_3_1',
                'bastion/hoglin_stable/stairs/stairs_3_2',
                'bastion/hoglin_stable/stairs/stairs_3_3',
                'bastion/hoglin_stable/stairs/stairs_3_4',
                'bastion/hoglin_stable/starting_pieces/stairs_0_mirrored',
                'bastion/hoglin_stable/starting_pieces/stairs_1_mirrored',
                'bastion/hoglin_stable/starting_pieces/stairs_2_mirrored',
                'bastion/hoglin_stable/starting_pieces/stairs_3_mirrored',
                'bastion/hoglin_stable/starting_pieces/stairs_4_mirrored',
                'bastion/hoglin_stable/starting_pieces/starting_stairs_0',
                'bastion/hoglin_stable/starting_pieces/starting_stairs_1',
                'bastion/hoglin_stable/starting_pieces/starting_stairs_2',
                'bastion/hoglin_stable/starting_pieces/starting_stairs_3',
                'bastion/hoglin_stable/starting_pieces/starting_stairs_4',
                'bastion/hoglin_stable/walls/side_wall_0',
                'bastion/hoglin_stable/walls/side_wall_1',
                'bastion/hoglin_stable/walls/wall_base',
                'bastion/mobs/crossbow_piglin',
                'bastion/mobs/empty',
                'bastion/mobs/hoglin',
                'bastion/mobs/melee_piglin',
                'bastion/mobs/melee_piglin_always',
                'bastion/mobs/sword_piglin',
                'bastion/treasure/bases/centers/center_0',
                'bastion/treasure/bases/centers/center_1',
                'bastion/treasure/bases/centers/center_2',
                'bastion/treasure/bases/centers/center_3',
                'bastion/treasure/bases/lava_basin',
                'bastion/treasure/big_air_full',
                'bastion/treasure/brains/center_brain',
                'bastion/treasure/connectors/center_to_wall_middle',
                'bastion/treasure/connectors/center_to_wall_top',
                'bastion/treasure/connectors/center_to_wall_top_entrance',
                'bastion/treasure/corners/bottom/corner_0',
                'bastion/treasure/corners/bottom/corner_1',
                'bastion/treasure/corners/edges/bottom',
                'bastion/treasure/corners/edges/middle',
                'bastion/treasure/corners/edges/top',
                'bastion/treasure/corners/middle/corner_0',
                'bastion/treasure/corners/middle/corner_1',
                'bastion/treasure/corners/top/corner_0',
                'bastion/treasure/corners/top/corner_1',
                'bastion/treasure/entrances/entrance_0',
                'bastion/treasure/extensions/empty',
                'bastion/treasure/extensions/fire_room',
                'bastion/treasure/extensions/house_0',
                'bastion/treasure/extensions/house_1',
                'bastion/treasure/extensions/large_bridge_0',
                'bastion/treasure/extensions/large_bridge_1',
                'bastion/treasure/extensions/large_bridge_2',
                'bastion/treasure/extensions/large_bridge_3',
                'bastion/treasure/extensions/roofed_bridge',
                'bastion/treasure/extensions/small_bridge_0',
                'bastion/treasure/extensions/small_bridge_1',
                'bastion/treasure/extensions/small_bridge_2',
                'bastion/treasure/extensions/small_bridge_3',
                'bastion/treasure/ramparts/bottom_wall_0',
                'bastion/treasure/ramparts/lava_basin_main',
                'bastion/treasure/ramparts/lava_basin_side',
                'bastion/treasure/ramparts/mid_wall_main',
                'bastion/treasure/ramparts/mid_wall_side',
                'bastion/treasure/ramparts/top_wall',
                'bastion/treasure/roofs/center_roof',
                'bastion/treasure/roofs/corner_roof',
                'bastion/treasure/roofs/wall_roof',
                'bastion/treasure/stairs/lower_stairs',
                'bastion/treasure/walls/bottom/wall_0',
                'bastion/treasure/walls/bottom/wall_1',
                'bastion/treasure/walls/bottom/wall_2',
                'bastion/treasure/walls/bottom/wall_3',
                'bastion/treasure/walls/entrance_wall',
                'bastion/treasure/walls/lava_wall',
                'bastion/treasure/walls/mid/wall_0',
                'bastion/treasure/walls/mid/wall_1',
                'bastion/treasure/walls/mid/wall_2',
                'bastion/treasure/walls/outer/bottom_corner',
                'bastion/treasure/walls/outer/medium_outer_wall',
                'bastion/treasure/walls/outer/mid_corner',
                'bastion/treasure/walls/outer/outer_wall',
                'bastion/treasure/walls/outer/tall_outer_wall',
                'bastion/treasure/walls/outer/top_corner',
                'bastion/treasure/walls/top/main_entrance',
                'bastion/treasure/walls/top/wall_0',
                'bastion/treasure/walls/top/wall_1',
                'bastion/units/air_base',
                'bastion/units/center_pieces/center_0',
                'bastion/units/center_pieces/center_1',
                'bastion/units/center_pieces/center_2',
                'bastion/units/edges/edge_0',
                'bastion/units/fillers/stage_0',
                'bastion/units/pathways/pathway_0',
                'bastion/units/pathways/pathway_wall_0',
                'bastion/units/ramparts/ramparts_0',
                'bastion/units/ramparts/ramparts_1',
                'bastion/units/ramparts/ramparts_2',
                'bastion/units/rampart_plates/plate_0',
                'bastion/units/stages/rot/stage_1_0',
                'bastion/units/stages/stage_0_0',
                'bastion/units/stages/stage_0_1',
                'bastion/units/stages/stage_0_2',
                'bastion/units/stages/stage_0_3',
                'bastion/units/stages/stage_1_0',
                'bastion/units/stages/stage_1_1',
                'bastion/units/stages/stage_1_2',
                'bastion/units/stages/stage_1_3',
                'bastion/units/stages/stage_2_0',
                'bastion/units/stages/stage_2_1',
                'bastion/units/stages/stage_3_0',
                'bastion/units/stages/stage_3_1',
                'bastion/units/stages/stage_3_2',
                'bastion/units/stages/stage_3_3',
                'bastion/units/walls/connected_wall',
                'bastion/units/walls/wall_base',
                'bastion/units/wall_units/edge_0_large',
                'bastion/units/wall_units/unit_0',
                'end_city/base_floor',
                'end_city/base_roof',
                'end_city/bridge_end',
                'end_city/bridge_gentle_stairs',
                'end_city/bridge_piece',
                'end_city/bridge_steep_stairs',
                'end_city/fat_tower_base',
                'end_city/fat_tower_middle',
                'end_city/fat_tower_top',
                'end_city/second_floor_1',
                'end_city/second_floor_2',
                'end_city/second_roof',
                'end_city/ship',
                'end_city/third_floor_1',
                'end_city/third_floor_2',
                'end_city/third_roof',
                'end_city/tower_base',
                'end_city/tower_floor',
                'end_city/tower_piece',
                'end_city/tower_top',
                'fossil/skull_1',
                'fossil/skull_1_coal',
                'fossil/skull_2',
                'fossil/skull_2_coal',
                'fossil/skull_3',
                'fossil/skull_3_coal',
                'fossil/skull_4',
                'fossil/skull_4_coal',
                'fossil/spine_1',
                'fossil/spine_1_coal',
                'fossil/spine_2',
                'fossil/spine_2_coal',
                'fossil/spine_3',
                'fossil/spine_3_coal',
                'fossil/spine_4',
                'fossil/spine_4_coal',
                'igloo/bottom',
                'igloo/middle',
                'igloo/top',
                'nether_fossils/fossil_1',
                'nether_fossils/fossil_10',
                'nether_fossils/fossil_11',
                'nether_fossils/fossil_12',
                'nether_fossils/fossil_13',
                'nether_fossils/fossil_14',
                'nether_fossils/fossil_2',
                'nether_fossils/fossil_3',
                'nether_fossils/fossil_4',
                'nether_fossils/fossil_5',
                'nether_fossils/fossil_6',
                'nether_fossils/fossil_7',
                'nether_fossils/fossil_8',
                'nether_fossils/fossil_9',
                'pillager_outpost/base_plate',
                'pillager_outpost/feature_cage1',
                'pillager_outpost/feature_cage2',
                'pillager_outpost/feature_cage_with_allays',
                'pillager_outpost/feature_logs',
                'pillager_outpost/feature_plate',
                'pillager_outpost/feature_targets',
                'pillager_outpost/feature_tent1',
                'pillager_outpost/feature_tent2',
                'pillager_outpost/watchtower',
                'pillager_outpost/watchtower_overgrown',
                'ruined_portal/giant_portal_1',
                'ruined_portal/giant_portal_2',
                'ruined_portal/giant_portal_3',
                'ruined_portal/portal_1',
                'ruined_portal/portal_10',
                'ruined_portal/portal_2',
                'ruined_portal/portal_3',
                'ruined_portal/portal_4',
                'ruined_portal/portal_5',
                'ruined_portal/portal_6',
                'ruined_portal/portal_7',
                'ruined_portal/portal_8',
                'ruined_portal/portal_9',
                'shipwreck/rightsideup_backhalf',
                'shipwreck/rightsideup_backhalf_degraded',
                'shipwreck/rightsideup_fronthalf',
                'shipwreck/rightsideup_fronthalf_degraded',
                'shipwreck/rightsideup_full',
                'shipwreck/rightsideup_full_degraded',
                'shipwreck/sideways_backhalf',
                'shipwreck/sideways_backhalf_degraded',
                'shipwreck/sideways_fronthalf',
                'shipwreck/sideways_fronthalf_degraded',
                'shipwreck/sideways_full',
                'shipwreck/sideways_full_degraded',
                'shipwreck/upsidedown_backhalf',
                'shipwreck/upsidedown_backhalf_degraded',
                'shipwreck/upsidedown_fronthalf',
                'shipwreck/upsidedown_fronthalf_degraded',
                'shipwreck/upsidedown_full',
                'shipwreck/upsidedown_full_degraded',
                'shipwreck/with_mast',
                'shipwreck/with_mast_degraded',
                'underwater_ruin/big_brick_1',
                'underwater_ruin/big_brick_2',
                'underwater_ruin/big_brick_3',
                'underwater_ruin/big_brick_8',
                'underwater_ruin/big_cracked_1',
                'underwater_ruin/big_cracked_2',
                'underwater_ruin/big_cracked_3',
                'underwater_ruin/big_cracked_8',
                'underwater_ruin/big_mossy_1',
                'underwater_ruin/big_mossy_2',
                'underwater_ruin/big_mossy_3',
                'underwater_ruin/big_mossy_8',
                'underwater_ruin/big_warm_4',
                'underwater_ruin/big_warm_5',
                'underwater_ruin/big_warm_6',
                'underwater_ruin/big_warm_7',
                'underwater_ruin/brick_1',
                'underwater_ruin/brick_2',
                'underwater_ruin/brick_3',
                'underwater_ruin/brick_4',
                'underwater_ruin/brick_5',
                'underwater_ruin/brick_6',
                'underwater_ruin/brick_7',
                'underwater_ruin/brick_8',
                'underwater_ruin/cracked_1',
                'underwater_ruin/cracked_2',
                'underwater_ruin/cracked_3',
                'underwater_ruin/cracked_4',
                'underwater_ruin/cracked_5',
                'underwater_ruin/cracked_6',
                'underwater_ruin/cracked_7',
                'underwater_ruin/cracked_8',
                'underwater_ruin/mossy_1',
                'underwater_ruin/mossy_2',
                'underwater_ruin/mossy_3',
                'underwater_ruin/mossy_4',
                'underwater_ruin/mossy_5',
                'underwater_ruin/mossy_6',
                'underwater_ruin/mossy_7',
                'underwater_ruin/mossy_8',
                'underwater_ruin/warm_1',
                'underwater_ruin/warm_2',
                'underwater_ruin/warm_3',
                'underwater_ruin/warm_4',
                'underwater_ruin/warm_5',
                'underwater_ruin/warm_6',
                'underwater_ruin/warm_7',
                'underwater_ruin/warm_8',
                'village/common/animals/cat_black',
                'village/common/animals/cat_british',
                'village/common/animals/cat_calico',
                'village/common/animals/cat_jellie',
                'village/common/animals/cat_persian',
                'village/common/animals/cat_ragdoll',
                'village/common/animals/cat_red',
                'village/common/animals/cat_siamese',
                'village/common/animals/cat_tabby',
                'village/common/animals/cat_white',
                'village/common/animals/cows_1',
                'village/common/animals/horses_1',
                'village/common/animals/horses_2',
                'village/common/animals/horses_3',
                'village/common/animals/horses_4',
                'village/common/animals/horses_5',
                'village/common/animals/pigs_1',
                'village/common/animals/sheep_1',
                'village/common/animals/sheep_2',
                'village/common/iron_golem',
                'village/common/well_bottom',
                'village/decays/grass_11x13',
                'village/decays/grass_16x16',
                'village/decays/grass_9x9',
                'village/desert/desert_lamp_1',
                'village/desert/houses/desert_animal_pen_1',
                'village/desert/houses/desert_animal_pen_2',
                'village/desert/houses/desert_armorer_1',
                'village/desert/houses/desert_butcher_shop_1',
                'village/desert/houses/desert_cartographer_house_1',
                'village/desert/houses/desert_farm_1',
                'village/desert/houses/desert_farm_2',
                'village/desert/houses/desert_fisher_1',
                'village/desert/houses/desert_fletcher_house_1',
                'village/desert/houses/desert_large_farm_1',
                'village/desert/houses/desert_library_1',
                'village/desert/houses/desert_mason_1',
                'village/desert/houses/desert_medium_house_1',
                'village/desert/houses/desert_medium_house_2',
                'village/desert/houses/desert_shepherd_house_1',
                'village/desert/houses/desert_small_house_1',
                'village/desert/houses/desert_small_house_2',
                'village/desert/houses/desert_small_house_3',
                'village/desert/houses/desert_small_house_4',
                'village/desert/houses/desert_small_house_5',
                'village/desert/houses/desert_small_house_6',
                'village/desert/houses/desert_small_house_7',
                'village/desert/houses/desert_small_house_8',
                'village/desert/houses/desert_tannery_1',
                'village/desert/houses/desert_temple_1',
                'village/desert/houses/desert_temple_2',
                'village/desert/houses/desert_tool_smith_1',
                'village/desert/houses/desert_weaponsmith_1',
                'village/desert/streets/corner_01',
                'village/desert/streets/corner_02',
                'village/desert/streets/crossroad_01',
                'village/desert/streets/crossroad_02',
                'village/desert/streets/crossroad_03',
                'village/desert/streets/square_01',
                'village/desert/streets/square_02',
                'village/desert/streets/straight_01',
                'village/desert/streets/straight_02',
                'village/desert/streets/straight_03',
                'village/desert/streets/turn_01',
                'village/desert/terminators/terminator_01',
                'village/desert/terminators/terminator_02',
                'village/desert/town_centers/desert_meeting_point_1',
                'village/desert/town_centers/desert_meeting_point_2',
                'village/desert/town_centers/desert_meeting_point_3',
                'village/desert/villagers/baby',
                'village/desert/villagers/nitwit',
                'village/desert/villagers/unemployed',
                'village/desert/zombie/houses/desert_medium_house_1',
                'village/desert/zombie/houses/desert_medium_house_2',
                'village/desert/zombie/houses/desert_small_house_1',
                'village/desert/zombie/houses/desert_small_house_2',
                'village/desert/zombie/houses/desert_small_house_3',
                'village/desert/zombie/houses/desert_small_house_4',
                'village/desert/zombie/houses/desert_small_house_5',
                'village/desert/zombie/houses/desert_small_house_6',
                'village/desert/zombie/houses/desert_small_house_7',
                'village/desert/zombie/houses/desert_small_house_8',
                'village/desert/zombie/streets/corner_01',
                'village/desert/zombie/streets/corner_02',
                'village/desert/zombie/streets/crossroad_01',
                'village/desert/zombie/streets/crossroad_02',
                'village/desert/zombie/streets/crossroad_03',
                'village/desert/zombie/streets/square_01',
                'village/desert/zombie/streets/square_02',
                'village/desert/zombie/streets/straight_01',
                'village/desert/zombie/streets/straight_02',
                'village/desert/zombie/streets/straight_03',
                'village/desert/zombie/streets/turn_01',
                'village/desert/zombie/terminators/terminator_02',
                'village/desert/zombie/town_centers/desert_meeting_point_1',
                'village/desert/zombie/town_centers/desert_meeting_point_2',
                'village/desert/zombie/town_centers/desert_meeting_point_3',
                'village/desert/zombie/villagers/nitwit',
                'village/desert/zombie/villagers/unemployed',
                'village/plains/houses/plains_accessory_1',
                'village/plains/houses/plains_animal_pen_1',
                'village/plains/houses/plains_animal_pen_2',
                'village/plains/houses/plains_animal_pen_3',
                'village/plains/houses/plains_armorer_house_1',
                'village/plains/houses/plains_big_house_1',
                'village/plains/houses/plains_butcher_shop_1',
                'village/plains/houses/plains_butcher_shop_2',
                'village/plains/houses/plains_cartographer_1',
                'village/plains/houses/plains_fisher_cottage_1',
                'village/plains/houses/plains_fletcher_house_1',
                'village/plains/houses/plains_large_farm_1',
                'village/plains/houses/plains_library_1',
                'village/plains/houses/plains_library_2',
                'village/plains/houses/plains_masons_house_1',
                'village/plains/houses/plains_medium_house_1',
                'village/plains/houses/plains_medium_house_2',
                'village/plains/houses/plains_meeting_point_4',
                'village/plains/houses/plains_meeting_point_5',
                'village/plains/houses/plains_shepherds_house_1',
                'village/plains/houses/plains_small_farm_1',
                'village/plains/houses/plains_small_house_1',
                'village/plains/houses/plains_small_house_2',
                'village/plains/houses/plains_small_house_3',
                'village/plains/houses/plains_small_house_4',
                'village/plains/houses/plains_small_house_5',
                'village/plains/houses/plains_small_house_6',
                'village/plains/houses/plains_small_house_7',
                'village/plains/houses/plains_small_house_8',
                'village/plains/houses/plains_stable_1',
                'village/plains/houses/plains_stable_2',
                'village/plains/houses/plains_tannery_1',
                'village/plains/houses/plains_temple_3',
                'village/plains/houses/plains_temple_4',
                'village/plains/houses/plains_tool_smith_1',
                'village/plains/houses/plains_weaponsmith_1',
                'village/plains/plains_lamp_1',
                'village/plains/streets/corner_01',
                'village/plains/streets/corner_02',
                'village/plains/streets/corner_03',
                'village/plains/streets/crossroad_01',
                'village/plains/streets/crossroad_02',
                'village/plains/streets/crossroad_03',
                'village/plains/streets/crossroad_04',
                'village/plains/streets/crossroad_05',
                'village/plains/streets/crossroad_06',
                'village/plains/streets/straight_01',
                'village/plains/streets/straight_02',
                'village/plains/streets/straight_03',
                'village/plains/streets/straight_04',
                'village/plains/streets/straight_05',
                'village/plains/streets/straight_06',
                'village/plains/streets/turn_01',
                'village/plains/terminators/terminator_01',
                'village/plains/terminators/terminator_02',
                'village/plains/terminators/terminator_03',
                'village/plains/terminators/terminator_04',
                'village/plains/town_centers/plains_fountain_01',
                'village/plains/town_centers/plains_meeting_point_1',
                'village/plains/town_centers/plains_meeting_point_2',
                'village/plains/town_centers/plains_meeting_point_3',
                'village/plains/villagers/baby',
                'village/plains/villagers/nitwit',
                'village/plains/villagers/unemployed',
                'village/plains/zombie/houses/plains_animal_pen_3',
                'village/plains/zombie/houses/plains_big_house_1',
                'village/plains/zombie/houses/plains_butcher_shop_2',
                'village/plains/zombie/houses/plains_fletcher_house_1',
                'village/plains/zombie/houses/plains_medium_house_1',
                'village/plains/zombie/houses/plains_medium_house_2',
                'village/plains/zombie/houses/plains_meeting_point_4',
                'village/plains/zombie/houses/plains_meeting_point_5',
                'village/plains/zombie/houses/plains_shepherds_house_1',
                'village/plains/zombie/houses/plains_small_house_1',
                'village/plains/zombie/houses/plains_small_house_2',
                'village/plains/zombie/houses/plains_small_house_3',
                'village/plains/zombie/houses/plains_small_house_4',
                'village/plains/zombie/houses/plains_small_house_5',
                'village/plains/zombie/houses/plains_small_house_6',
                'village/plains/zombie/houses/plains_small_house_7',
                'village/plains/zombie/houses/plains_small_house_8',
                'village/plains/zombie/houses/plains_stable_1',
                'village/plains/zombie/streets/corner_01',
                'village/plains/zombie/streets/corner_02',
                'village/plains/zombie/streets/corner_03',
                'village/plains/zombie/streets/crossroad_01',
                'village/plains/zombie/streets/crossroad_02',
                'village/plains/zombie/streets/crossroad_03',
                'village/plains/zombie/streets/crossroad_04',
                'village/plains/zombie/streets/crossroad_05',
                'village/plains/zombie/streets/crossroad_06',
                'village/plains/zombie/streets/straight_01',
                'village/plains/zombie/streets/straight_02',
                'village/plains/zombie/streets/straight_03',
                'village/plains/zombie/streets/straight_04',
                'village/plains/zombie/streets/straight_05',
                'village/plains/zombie/streets/straight_06',
                'village/plains/zombie/streets/turn_01',
                'village/plains/zombie/town_centers/plains_fountain_01',
                'village/plains/zombie/town_centers/plains_meeting_point_1',
                'village/plains/zombie/town_centers/plains_meeting_point_2',
                'village/plains/zombie/town_centers/plains_meeting_point_3',
                'village/plains/zombie/villagers/nitwit',
                'village/plains/zombie/villagers/unemployed',
                'village/savanna/houses/savanna_animal_pen_1',
                'village/savanna/houses/savanna_animal_pen_2',
                'village/savanna/houses/savanna_animal_pen_3',
                'village/savanna/houses/savanna_armorer_1',
                'village/savanna/houses/savanna_butchers_shop_1',
                'village/savanna/houses/savanna_butchers_shop_2',
                'village/savanna/houses/savanna_cartographer_1',
                'village/savanna/houses/savanna_fisher_cottage_1',
                'village/savanna/houses/savanna_fletcher_house_1',
                'village/savanna/houses/savanna_large_farm_1',
                'village/savanna/houses/savanna_large_farm_2',
                'village/savanna/houses/savanna_library_1',
                'village/savanna/houses/savanna_mason_1',
                'village/savanna/houses/savanna_medium_house_1',
                'village/savanna/houses/savanna_medium_house_2',
                'village/savanna/houses/savanna_shepherd_1',
                'village/savanna/houses/savanna_small_farm',
                'village/savanna/houses/savanna_small_house_1',
                'village/savanna/houses/savanna_small_house_2',
                'village/savanna/houses/savanna_small_house_3',
                'village/savanna/houses/savanna_small_house_4',
                'village/savanna/houses/savanna_small_house_5',
                'village/savanna/houses/savanna_small_house_6',
                'village/savanna/houses/savanna_small_house_7',
                'village/savanna/houses/savanna_small_house_8',
                'village/savanna/houses/savanna_tannery_1',
                'village/savanna/houses/savanna_temple_1',
                'village/savanna/houses/savanna_temple_2',
                'village/savanna/houses/savanna_tool_smith_1',
                'village/savanna/houses/savanna_weaponsmith_1',
                'village/savanna/houses/savanna_weaponsmith_2',
                'village/savanna/savanna_lamp_post_01',
                'village/savanna/streets/corner_01',
                'village/savanna/streets/corner_03',
                'village/savanna/streets/crossroad_02',
                'village/savanna/streets/crossroad_03',
                'village/savanna/streets/crossroad_04',
                'village/savanna/streets/crossroad_05',
                'village/savanna/streets/crossroad_06',
                'village/savanna/streets/crossroad_07',
                'village/savanna/streets/split_01',
                'village/savanna/streets/split_02',
                'village/savanna/streets/straight_02',
                'village/savanna/streets/straight_04',
                'village/savanna/streets/straight_05',
                'village/savanna/streets/straight_06',
                'village/savanna/streets/straight_08',
                'village/savanna/streets/straight_09',
                'village/savanna/streets/straight_10',
                'village/savanna/streets/straight_11',
                'village/savanna/streets/turn_01',
                'village/savanna/terminators/terminator_05',
                'village/savanna/town_centers/savanna_meeting_point_1',
                'village/savanna/town_centers/savanna_meeting_point_2',
                'village/savanna/town_centers/savanna_meeting_point_3',
                'village/savanna/town_centers/savanna_meeting_point_4',
                'village/savanna/villagers/baby',
                'village/savanna/villagers/nitwit',
                'village/savanna/villagers/unemployed',
                'village/savanna/zombie/houses/savanna_animal_pen_2',
                'village/savanna/zombie/houses/savanna_animal_pen_3',
                'village/savanna/zombie/houses/savanna_large_farm_2',
                'village/savanna/zombie/houses/savanna_medium_house_1',
                'village/savanna/zombie/houses/savanna_medium_house_2',
                'village/savanna/zombie/houses/savanna_small_house_1',
                'village/savanna/zombie/houses/savanna_small_house_2',
                'village/savanna/zombie/houses/savanna_small_house_3',
                'village/savanna/zombie/houses/savanna_small_house_4',
                'village/savanna/zombie/houses/savanna_small_house_5',
                'village/savanna/zombie/houses/savanna_small_house_6',
                'village/savanna/zombie/houses/savanna_small_house_7',
                'village/savanna/zombie/houses/savanna_small_house_8',
                'village/savanna/zombie/streets/corner_01',
                'village/savanna/zombie/streets/corner_03',
                'village/savanna/zombie/streets/crossroad_02',
                'village/savanna/zombie/streets/crossroad_03',
                'village/savanna/zombie/streets/crossroad_04',
                'village/savanna/zombie/streets/crossroad_05',
                'village/savanna/zombie/streets/crossroad_06',
                'village/savanna/zombie/streets/crossroad_07',
                'village/savanna/zombie/streets/split_01',
                'village/savanna/zombie/streets/split_02',
                'village/savanna/zombie/streets/straight_02',
                'village/savanna/zombie/streets/straight_04',
                'village/savanna/zombie/streets/straight_05',
                'village/savanna/zombie/streets/straight_06',
                'village/savanna/zombie/streets/straight_08',
                'village/savanna/zombie/streets/straight_09',
                'village/savanna/zombie/streets/straight_10',
                'village/savanna/zombie/streets/straight_11',
                'village/savanna/zombie/streets/turn_01',
                'village/savanna/zombie/terminators/terminator_05',
                'village/savanna/zombie/town_centers/savanna_meeting_point_1',
                'village/savanna/zombie/town_centers/savanna_meeting_point_2',
                'village/savanna/zombie/town_centers/savanna_meeting_point_3',
                'village/savanna/zombie/town_centers/savanna_meeting_point_4',
                'village/savanna/zombie/villagers/nitwit',
                'village/savanna/zombie/villagers/unemployed',
                'village/snowy/houses/snowy_animal_pen_1',
                'village/snowy/houses/snowy_animal_pen_2',
                'village/snowy/houses/snowy_armorer_house_1',
                'village/snowy/houses/snowy_armorer_house_2',
                'village/snowy/houses/snowy_butchers_shop_1',
                'village/snowy/houses/snowy_butchers_shop_2',
                'village/snowy/houses/snowy_cartographer_house_1',
                'village/snowy/houses/snowy_farm_1',
                'village/snowy/houses/snowy_farm_2',
                'village/snowy/houses/snowy_fisher_cottage',
                'village/snowy/houses/snowy_fletcher_house_1',
                'village/snowy/houses/snowy_library_1',
                'village/snowy/houses/snowy_masons_house_1',
                'village/snowy/houses/snowy_masons_house_2',
                'village/snowy/houses/snowy_medium_house_1',
                'village/snowy/houses/snowy_medium_house_2',
                'village/snowy/houses/snowy_medium_house_3',
                'village/snowy/houses/snowy_shepherds_house_1',
                'village/snowy/houses/snowy_small_house_1',
                'village/snowy/houses/snowy_small_house_2',
                'village/snowy/houses/snowy_small_house_3',
                'village/snowy/houses/snowy_small_house_4',
                'village/snowy/houses/snowy_small_house_5',
                'village/snowy/houses/snowy_small_house_6',
                'village/snowy/houses/snowy_small_house_7',
                'village/snowy/houses/snowy_small_house_8',
                'village/snowy/houses/snowy_tannery_1',
                'village/snowy/houses/snowy_temple_1',
                'village/snowy/houses/snowy_tool_smith_1',
                'village/snowy/houses/snowy_weapon_smith_1',
                'village/snowy/snowy_lamp_post_01',
                'village/snowy/snowy_lamp_post_02',
                'village/snowy/snowy_lamp_post_03',
                'village/snowy/streets/corner_01',
                'village/snowy/streets/corner_02',
                'village/snowy/streets/corner_03',
                'village/snowy/streets/crossroad_01',
                'village/snowy/streets/crossroad_02',
                'village/snowy/streets/crossroad_03',
                'village/snowy/streets/crossroad_04',
                'village/snowy/streets/crossroad_05',
                'village/snowy/streets/crossroad_06',
                'village/snowy/streets/square_01',
                'village/snowy/streets/straight_01',
                'village/snowy/streets/straight_02',
                'village/snowy/streets/straight_03',
                'village/snowy/streets/straight_04',
                'village/snowy/streets/straight_06',
                'village/snowy/streets/straight_08',
                'village/snowy/streets/turn_01',
                'village/snowy/town_centers/snowy_meeting_point_1',
                'village/snowy/town_centers/snowy_meeting_point_2',
                'village/snowy/town_centers/snowy_meeting_point_3',
                'village/snowy/villagers/baby',
                'village/snowy/villagers/nitwit',
                'village/snowy/villagers/unemployed',
                'village/snowy/zombie/houses/snowy_medium_house_1',
                'village/snowy/zombie/houses/snowy_medium_house_2',
                'village/snowy/zombie/houses/snowy_medium_house_3',
                'village/snowy/zombie/houses/snowy_small_house_1',
                'village/snowy/zombie/houses/snowy_small_house_2',
                'village/snowy/zombie/houses/snowy_small_house_3',
                'village/snowy/zombie/houses/snowy_small_house_4',
                'village/snowy/zombie/houses/snowy_small_house_5',
                'village/snowy/zombie/houses/snowy_small_house_6',
                'village/snowy/zombie/houses/snowy_small_house_7',
                'village/snowy/zombie/houses/snowy_small_house_8',
                'village/snowy/zombie/streets/corner_01',
                'village/snowy/zombie/streets/corner_02',
                'village/snowy/zombie/streets/corner_03',
                'village/snowy/zombie/streets/crossroad_01',
                'village/snowy/zombie/streets/crossroad_02',
                'village/snowy/zombie/streets/crossroad_03',
                'village/snowy/zombie/streets/crossroad_04',
                'village/snowy/zombie/streets/crossroad_05',
                'village/snowy/zombie/streets/crossroad_06',
                'village/snowy/zombie/streets/square_01',
                'village/snowy/zombie/streets/straight_01',
                'village/snowy/zombie/streets/straight_02',
                'village/snowy/zombie/streets/straight_03',
                'village/snowy/zombie/streets/straight_04',
                'village/snowy/zombie/streets/straight_06',
                'village/snowy/zombie/streets/straight_08',
                'village/snowy/zombie/streets/turn_01',
                'village/snowy/zombie/town_centers/snowy_meeting_point_1',
                'village/snowy/zombie/town_centers/snowy_meeting_point_2',
                'village/snowy/zombie/town_centers/snowy_meeting_point_3',
                'village/snowy/zombie/villagers/nitwit',
                'village/snowy/zombie/villagers/unemployed',
                'village/taiga/houses/taiga_animal_pen_1',
                'village/taiga/houses/taiga_armorer_2',
                'village/taiga/houses/taiga_armorer_house_1',
                'village/taiga/houses/taiga_butcher_shop_1',
                'village/taiga/houses/taiga_cartographer_house_1',
                'village/taiga/houses/taiga_fisher_cottage_1',
                'village/taiga/houses/taiga_fletcher_house_1',
                'village/taiga/houses/taiga_large_farm_1',
                'village/taiga/houses/taiga_large_farm_2',
                'village/taiga/houses/taiga_library_1',
                'village/taiga/houses/taiga_masons_house_1',
                'village/taiga/houses/taiga_medium_house_1',
                'village/taiga/houses/taiga_medium_house_2',
                'village/taiga/houses/taiga_medium_house_3',
                'village/taiga/houses/taiga_medium_house_4',
                'village/taiga/houses/taiga_shepherds_house_1',
                'village/taiga/houses/taiga_small_farm_1',
                'village/taiga/houses/taiga_small_house_1',
                'village/taiga/houses/taiga_small_house_2',
                'village/taiga/houses/taiga_small_house_3',
                'village/taiga/houses/taiga_small_house_4',
                'village/taiga/houses/taiga_small_house_5',
                'village/taiga/houses/taiga_tannery_1',
                'village/taiga/houses/taiga_temple_1',
                'village/taiga/houses/taiga_tool_smith_1',
                'village/taiga/houses/taiga_weaponsmith_1',
                'village/taiga/houses/taiga_weaponsmith_2',
                'village/taiga/streets/corner_01',
                'village/taiga/streets/corner_02',
                'village/taiga/streets/corner_03',
                'village/taiga/streets/crossroad_01',
                'village/taiga/streets/crossroad_02',
                'village/taiga/streets/crossroad_03',
                'village/taiga/streets/crossroad_04',
                'village/taiga/streets/crossroad_05',
                'village/taiga/streets/crossroad_06',
                'village/taiga/streets/straight_01',
                'village/taiga/streets/straight_02',
                'village/taiga/streets/straight_03',
                'village/taiga/streets/straight_04',
                'village/taiga/streets/straight_05',
                'village/taiga/streets/straight_06',
                'village/taiga/streets/turn_01',
                'village/taiga/taiga_decoration_1',
                'village/taiga/taiga_decoration_2',
                'village/taiga/taiga_decoration_3',
                'village/taiga/taiga_decoration_4',
                'village/taiga/taiga_decoration_5',
                'village/taiga/taiga_decoration_6',
                'village/taiga/taiga_lamp_post_1',
                'village/taiga/town_centers/taiga_meeting_point_1',
                'village/taiga/town_centers/taiga_meeting_point_2',
                'village/taiga/villagers/baby',
                'village/taiga/villagers/nitwit',
                'village/taiga/villagers/unemployed',
                'village/taiga/zombie/houses/taiga_cartographer_house_1',
                'village/taiga/zombie/houses/taiga_fisher_cottage_1',
                'village/taiga/zombie/houses/taiga_large_farm_2',
                'village/taiga/zombie/houses/taiga_library_1',
                'village/taiga/zombie/houses/taiga_medium_house_1',
                'village/taiga/zombie/houses/taiga_medium_house_2',
                'village/taiga/zombie/houses/taiga_medium_house_3',
                'village/taiga/zombie/houses/taiga_medium_house_4',
                'village/taiga/zombie/houses/taiga_shepherds_house_1',
                'village/taiga/zombie/houses/taiga_small_house_1',
                'village/taiga/zombie/houses/taiga_small_house_2',
                'village/taiga/zombie/houses/taiga_small_house_3',
                'village/taiga/zombie/houses/taiga_small_house_4',
                'village/taiga/zombie/houses/taiga_small_house_5',
                'village/taiga/zombie/houses/taiga_temple_1',
                'village/taiga/zombie/houses/taiga_tool_smith_1',
                'village/taiga/zombie/houses/taiga_weaponsmith_2',
                'village/taiga/zombie/streets/corner_01',
                'village/taiga/zombie/streets/corner_02',
                'village/taiga/zombie/streets/corner_03',
                'village/taiga/zombie/streets/crossroad_01',
                'village/taiga/zombie/streets/crossroad_02',
                'village/taiga/zombie/streets/crossroad_03',
                'village/taiga/zombie/streets/crossroad_04',
                'village/taiga/zombie/streets/crossroad_05',
                'village/taiga/zombie/streets/crossroad_06',
                'village/taiga/zombie/streets/straight_01',
                'village/taiga/zombie/streets/straight_02',
                'village/taiga/zombie/streets/straight_03',
                'village/taiga/zombie/streets/straight_04',
                'village/taiga/zombie/streets/straight_05',
                'village/taiga/zombie/streets/straight_06',
                'village/taiga/zombie/streets/turn_01',
                'village/taiga/zombie/town_centers/taiga_meeting_point_1',
                'village/taiga/zombie/town_centers/taiga_meeting_point_2',
                'village/taiga/zombie/villagers/nitwit',
                'village/taiga/zombie/villagers/unemployed',
                'woodland_mansion/1x1_a1',
                'woodland_mansion/1x1_a2',
                'woodland_mansion/1x1_a3',
                'woodland_mansion/1x1_a4',
                'woodland_mansion/1x1_a5',
                'woodland_mansion/1x1_as1',
                'woodland_mansion/1x1_as2',
                'woodland_mansion/1x1_as3',
                'woodland_mansion/1x1_as4',
                'woodland_mansion/1x1_b1',
                'woodland_mansion/1x1_b2',
                'woodland_mansion/1x1_b3',
                'woodland_mansion/1x1_b4',
                'woodland_mansion/1x1_b5',
                'woodland_mansion/1x2_a1',
                'woodland_mansion/1x2_a2',
                'woodland_mansion/1x2_a3',
                'woodland_mansion/1x2_a4',
                'woodland_mansion/1x2_a5',
                'woodland_mansion/1x2_a6',
                'woodland_mansion/1x2_a7',
                'woodland_mansion/1x2_a8',
                'woodland_mansion/1x2_a9',
                'woodland_mansion/1x2_b1',
                'woodland_mansion/1x2_b2',
                'woodland_mansion/1x2_b3',
                'woodland_mansion/1x2_b4',
                'woodland_mansion/1x2_b5',
                'woodland_mansion/1x2_c1',
                'woodland_mansion/1x2_c2',
                'woodland_mansion/1x2_c3',
                'woodland_mansion/1x2_c4',
                'woodland_mansion/1x2_c_stairs',
                'woodland_mansion/1x2_d1',
                'woodland_mansion/1x2_d2',
                'woodland_mansion/1x2_d3',
                'woodland_mansion/1x2_d4',
                'woodland_mansion/1x2_d5',
                'woodland_mansion/1x2_d_stairs',
                'woodland_mansion/1x2_s1',
                'woodland_mansion/1x2_s2',
                'woodland_mansion/1x2_se1',
                'woodland_mansion/2x2_a1',
                'woodland_mansion/2x2_a2',
                'woodland_mansion/2x2_a3',
                'woodland_mansion/2x2_a4',
                'woodland_mansion/2x2_b1',
                'woodland_mansion/2x2_b2',
                'woodland_mansion/2x2_b3',
                'woodland_mansion/2x2_b4',
                'woodland_mansion/2x2_b5',
                'woodland_mansion/2x2_s1',
                'woodland_mansion/carpet_east',
                'woodland_mansion/carpet_north',
                'woodland_mansion/carpet_south_1',
                'woodland_mansion/carpet_south_2',
                'woodland_mansion/carpet_west_1',
                'woodland_mansion/carpet_west_2',
                'woodland_mansion/corridor_floor',
                'woodland_mansion/entrance',
                'woodland_mansion/indoors_door_1',
                'woodland_mansion/indoors_door_2',
                'woodland_mansion/indoors_wall_1',
                'woodland_mansion/indoors_wall_2',
                'woodland_mansion/roof',
                'woodland_mansion/roof_corner',
                'woodland_mansion/roof_front',
                'woodland_mansion/roof_inner_corner',
                'woodland_mansion/small_wall',
                'woodland_mansion/small_wall_corner',
                'woodland_mansion/wall_corner',
                'woodland_mansion/wall_flat',
                'woodland_mansion/wall_window',
            ];
            break;
        case 'features':
            placeholder = [
                'end_spike',
                'end_gateway_return',
                'end_gateway_delayed',
                'chorus_plant',
                'end_island',
                'seagrass_short',
                'seagrass_slightly_less_short',
                'seagrass_mid',
                'seagrass_tall',
                'sea_pickle',
                'seagrass_simple',
                'kelp',
                'warm_ocean_vegetation',
                'bamboo_no_podzol',
                'bamboo_some_podzol',
                'vines',
                'patch_brown_mushroom',
                'patch_red_mushroom',
                'patch_sunflower',
                'patch_pumpkin',
                'patch_berry_bush',
                'patch_taiga_grass',
                'patch_grass',
                'patch_grass_jungle',
                'single_piece_of_grass',
                'patch_dead_bush',
                'patch_melon',
                'patch_waterlily',
                'patch_tall_grass',
                'patch_large_fern',
                'patch_cactus',
                'patch_sugar_cane',
                'flower_default',
                'flower_flower_forest',
                'flower_swamp',
                'flower_plain',
                'flower_meadow',
                'forest_flowers',
                'dark_forest_vegetation',
                'trees_flower_forest',
                'meadow_trees',
                'trees_taiga',
                'trees_grove',
                'trees_savanna',
                'birch_tall',
                'trees_windswept_hills',
                'trees_water',
                'trees_birch_and_oak',
                'trees_plains',
                'trees_sparse_jungle',
                'trees_old_growth_spruce_taiga',
                'trees_old_growth_pine_taiga',
                'trees_jungle',
                'bamboo_vegetation',
                'mushroom_island_vegetation',
                'crimson_fungus',
                'crimson_fungus_planted',
                'warped_fungus',
                'warped_fungus_planted',
                'huge_brown_mushroom',
                'huge_red_mushroom',
                'oak',
                'dark_oak',
                'birch',
                'acacia',
                'spruce',
                'pine',
                'jungle_tree',
                'fancy_oak',
                'jungle_tree_no_vine',
                'mega_jungle_tree',
                'mega_spruce',
                'mega_pine',
                'super_birch_bees_0002',
                'super_birch_bees',
                'swamp_oak',
                'jungle_bush',
                'azalea_tree',
                'oak_bees_0002',
                'oak_bees_002',
                'oak_bees_005',
                'birch_bees_0002',
                'birch_bees_002',
                'birch_bees_005',
                'fancy_oak_bees_0002',
                'fancy_oak_bees_002',
                'fancy_oak_bees_005',
                'fancy_oak_bees',
                'pile_hay',
                'pile_melon',
                'pile_snow',
                'pile_ice',
                'pile_pumpkin',
                'ore_magma',
                'ore_soul_sand',
                'ore_nether_gold',
                'ore_quartz',
                'ore_gravel_nether',
                'ore_blackstone',
                'ore_dirt',
                'ore_gravel',
                'ore_granite',
                'ore_diorite',
                'ore_andesite',
                'ore_tuff',
                'ore_coal',
                'ore_coal_buried',
                'ore_iron',
                'ore_iron_small',
                'ore_gold',
                'ore_gold_buried',
                'ore_redstone',
                'ore_diamond_small',
                'ore_diamond_large',
                'ore_diamond_buried',
                'ore_lapis',
                'ore_lapis_buried',
                'ore_infested',
                'ore_emerald',
                'ore_ancient_debris_large',
                'ore_ancient_debris_small',
                'ore_copper_small',
                'ore_copper_large',
                'ore_clay',
                'delta',
                'small_basalt_columns',
                'large_basalt_columns',
                'basalt_blobs',
                'blackstone_blobs',
                'glowstone_extra',
                'crimson_forest_vegetation',
                'crimson_forest_vegetation_bonemeal',
                'warped_forest_vegetation',
                'warped_forest_vegetation_bonemeal',
                'nether_sprouts',
                'nether_sprouts_bonemeal',
                'twisting_vines',
                'twisting_vines_bonemeal',
                'weeping_vines',
                'patch_crimson_roots',
                'basalt_pillar',
                'spring_lava_nether',
                'spring_nether_closed',
                'spring_nether_open',
                'patch_fire',
                'patch_soul_fire',
                'ice_spike',
                'ice_patch',
                'forest_rock',
                'iceberg_packed',
                'iceberg_blue',
                'blue_ice',
                'lake_lava',
                'disk_clay',
                'disk_gravel',
                'disk_sand',
                'freeze_top_layer',
                'bonus_chest',
                'void_start_platform',
                'desert_well',
                'spring_lava_overworld',
                'spring_lava_frozen',
                'spring_water',
                'monster_room',
                'fossil_coal',
                'fossil_diamonds',
                'dripstone_cluster',
                'large_dripstone',
                'pointed_dripstone',
                'underwater_magma',
                'glow_lichen',
                'rooted_azalea_tree',
                'cave_vine',
                'cave_vine_in_moss',
                'moss_vegetation',
                'moss_patch',
                'moss_patch_bonemeal',
                'dripleaf',
                'clay_with_dripleaves',
                'clay_pool_with_dripleaves',
                'lush_caves_clay',
                'moss_patch_ceiling',
                'spore_blossom',
                'amethyst_geode',
            ];
            break;
        case 'colors':
            placeholder = colors;
            placeholder.push('reset');
            break;
        case 'damage_sources':
            placeholder = [
                'arrow',
                'bad_respawn_point',
                'cactus',
                'campfire',
                'cramming',
                'dragon_breath',
                'drown',
                'dry_out',
                'ender_pearl',
                'explosion',
                'fall',
                'falling_anvil',
                'falling_block',
                'falling_stalactite',
                'fireball',
                'fireworks',
                'fly_into_wall',
                'freeze',
                'generic',
                'generic_kill',
                'hot_floor',
                'in_fire',
                'in_wall',
                'indirect_magic',
                'lava',
                'lightning_bolt',
                'mace_smash',
                'magic',
                'mob_attack',
                'mob_attack_no_aggro',
                'mob_projectile',
                'on_fire',
                'out_of_world',
                'outside_border',
                'player_attack',
                'player_explosion',
                'sonic_boom',
                'spit',
                'stalagmite',
                'starve',
                'sting',
                'sweet_burry_bush',
                'thorns',
                'thrown',
                'trident',
                'unattributed_fireball',
                'wind_charge',
                'wither',
                'wither_skull',
            ];
            break;
        case key.endsWith('_criteria') ? key : null:
            //TODO get advancement criteria
            break;
        case key.endsWith('_levels') ? key : null:
            const focusedEnchantment = key.split('_').shift();

            const enchantment = mcData.enchantmentsArray
                .find(enchantment => enchantment.displayName === focusedEnchantment || enchantment.name === focusedEnchantment);
            placeholder = [];
            if(enchantment) {
                for(let i = 1; i <= enchantment.maxLevel + 1; i++) placeholder.push(i.toString());
            }
    }

    return placeholder;

    function toSnakeCase(string) {
        return string.replace(/([A-Z])/g, (_, y) => `_${y.toLowerCase()}`).replace(/^_/, '');
    }

    async function getNBTFile(getPath, putPath) {
        if(!server) return {};
        const nbtResponse = await server.protocol.get(getPath, putPath);
        if(nbtResponse?.status !== 200) return {};
        return utils.nbtBufferToObject(nbtResponse.data, null);
    }

    async function getFunctions() {
        const worldPath = server?.path;
        if(!worldPath) return [];

        const allFunctions = [];

        const datapacks = await server.protocol.list(FilePath.DataPacks(worldPath));
        if(datapacks?.status !== 200) return [];

        for(const datapack of datapacks.data) {
            if(!datapack.isDirectory) continue;

            const namespaces = await server.protocol.list(`${FilePath.DataPacks(worldPath)}/${datapack.name}/data/`);
            if(namespaces?.status !== 200) continue;

            for(const namespace of namespaces.data) {
                if(!namespace.isDirectory) continue;
                await listFunctions(datapack.name, namespace.name, '');
            }
        }

        async function listFunctions(datapack, namespace, path) {
            const functions = await server.protocol.list(`${FilePath.DataPacks(worldPath)}/${datapack}/data/${namespace}/functions/${path}`);
            if(functions?.status !== 200) return;

            for(const func of functions.data) {
                const funcPath = `${path}/${func.name}`.replace(/^\/+/, '');
                if(func.isDirectory) await listFunctions(datapack, namespace, funcPath);
                else if(func.name.endsWith('.mcfunction')) allFunctions.push(`${namespace}:${funcPath.replaceAll('.mcfunction', '')}`);
            }
        }

        return allFunctions;
    }
}
